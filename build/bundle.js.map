{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://asteroids/./src/shockwave.ts","webpack://asteroids/./src/draw.ts","webpack://asteroids/./src/demoMode.ts","webpack://asteroids/./src/ship.ts","webpack://asteroids/./src/flash.ts","webpack://asteroids/./src/achievement.ts","webpack://asteroids/./src/sounds.ts","webpack://asteroids/./src/rocks.ts","webpack://asteroids/./src/quadtree.ts","webpack://asteroids/./src/world.ts","webpack://asteroids/./src/lut.ts","webpack://asteroids/./src/collisions.ts","webpack://asteroids/./src/slowMoTimer.ts","webpack://asteroids/./src/lineclip.ts","webpack://asteroids/./src/screen.ts","webpack://asteroids/./node_modules/howler/dist/howler.js","webpack://asteroids/./src/highScoreMode.ts","webpack://asteroids/./src/loop.ts","webpack://asteroids/./src/thump.ts","webpack://asteroids/./src/gameMode.ts","webpack://asteroids/./src/attractMode.ts","webpack://asteroids/./src/highscores.ts","webpack://asteroids/./node_modules/hammerjs/hammer.js","webpack://asteroids/./src/keys.ts","webpack://asteroids/./src/object2d.ts","webpack://asteroids/./src/initialsMode.ts","webpack://asteroids/./src/util.ts","webpack://asteroids/./src/scoreMarker.ts","webpack://asteroids/./src/events.ts","webpack://asteroids/./src/alien.ts","webpack://asteroids/./src/explosion.ts","webpack://asteroids/./src/bullet.ts","webpack://asteroids/./src/global.ts","webpack://asteroids/./src/vector.ts","webpack://asteroids/webpack/bootstrap","webpack://asteroids/webpack/runtime/global","webpack://asteroids/webpack/runtime/make namespace object","webpack://asteroids/webpack/runtime/publicPath","webpack://asteroids/./src/asteroids.ts"],"sourcesContent":["import { EventSource } from './events';\r\nimport { Key } from './keys';\r\nimport screen from './screen';\r\nimport { Object2D } from './object2d';\r\nimport { Rock } from './rocks';\r\nimport { Vector } from './vector';\r\nimport { random } from './util';\r\n\r\nexport class Shockwave extends Object2D {\r\n\r\n    life: number = 1;   \r\n    frame: number = 0;\r\n    radius: number = 1;\r\n    rocks: Rock[] = [];\r\n    \r\n    constructor(x: number, y: number, public velocity: Vector, public size: number, public multiplier: number = 1) {\r\n        super(x, y);\r\n\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.frame++;\r\n        this.radius = this.size * (this.frame / 10);\r\n        this.life -= dt;\r\n\r\n        this.origin.x += this.velocity.x * dt;\r\n        this.origin.y += this.velocity.y * dt;\r\n\r\n        if (this.life <= .1) {\r\n            this.rocks.length = 0;\r\n            this.trigger('expired');\r\n        }\r\n    }\r\n\r\n    render(dt?: number) {\r\n        if (this.frame === 1) {\r\n            const radius = (this.size * (random(25,55))) / 10;\r\n            const { ctx } = screen;\r\n            ctx.beginPath();\r\n            ctx.arc(this.origin.x, this.origin.y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fillStyle = `rgba(255, 255, 255, ${random(.2, .5)})`;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            screen.draw.scanlines();\r\n        }\r\n\r\n        screen.draw.circle(this.origin.x, this.origin.y, this.radius, `rgba(128,128,128,${.3 - (this.frame / 100)})`);\r\n    }\r\n\r\n    get x(): number {\r\n        return this.origin.x - this.radius;\r\n    }\r\n\r\n    get y(): number {\r\n        return this.origin.y - this.radius;\r\n    }\r\n\r\n    get width(): number {\r\n        return this.radius * 2;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.radius * 2;\r\n    }\r\n\r\n    \r\n}","import screen from './screen';\r\nimport { Ship } from './ship';\r\nimport { random } from './util';\r\nimport Global from './global';\r\n\r\nconst VectorLine = 'rgba(255,255,255,.8)';\r\nconst TextColor = 'rgba(255,255,255,.8)';\r\nconst Y_START = 20;\r\nconst DefaultLineWidth = 2;\r\nconst CR = String.fromCharCode(169);\r\n\r\nexport function magenta(opacity: number = 1) {\r\n    return `rgba(255,0,255, ${opacity})`;\r\n}\r\n\r\nexport function cyan(opacity: number = 1) {\r\n    return `rgba(0,255,255, ${opacity})`;\r\n}\r\n\r\nexport function white(opacity: number = 1) {\r\n    return `rgba(255,255,255, ${opacity})`;\r\n}\r\n\r\nexport const BACKGROUND_COLOR = '#000000';\r\n\r\nconst magenta5 = magenta(.5);\r\nconst cyan5 = cyan(.5);\r\n\r\nexport class Draw {\r\n\r\n\r\n    constructor(private ctx: CanvasRenderingContext2D) {\r\n\r\n    }\r\n\r\n    line(x1: number, y1: number, x2: number, y2: number, color: string = VectorLine, width: number = DefaultLineWidth) {\r\n        const { ctx } = this;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width; \r\n        ctx.moveTo(x1, y1);\r\n        ctx.strokeStyle = color;\r\n        ctx.lineTo(x2, y2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    vectorline(x1: number, y1: number, x2: number, y2: number, color: string = VectorLine, width: number = DefaultLineWidth) {\r\n        const { ctx } = this;\r\n        const old = ctx.strokeStyle;\r\n\r\n        if (Global.burn) {\r\n            this.line(x1 - 2, y1, x2 - 2, y2, magenta5);\r\n            this.line(x1 - 1, y1 - 2, x2 - 1, y2 - 1, cyan5);\r\n        }\r\n        \r\n        this.line(x1, y1, x2, y2, color);\r\n        \r\n        ctx.strokeStyle = old;\r\n    }\r\n\r\n    shape(points: Point[], x: number, y: number, color: string = VectorLine, closed: boolean = true) {\r\n        let p1, p2;\r\n        let l = points.length - 1;\r\n        let i = 0;\r\n        \r\n        this.ctx.save();\r\n\r\n        for(let i = 0; i < l; i++) {\r\n            this.line(x + points[i].x, y + points[i].y, x + points[i + 1].x, y + points[i + 1].y, color);\r\n        }\r\n        \r\n        if (closed) {\r\n            this.line(x + points[l].x, y + points[l].y, x + points[0].x, y + points[0].y, color);\r\n        }\r\n\r\n        this.ctx.restore();\r\n    }\r\n\r\n    vectorShape(points: Point[], x: number, y: number, color: string = VectorLine, closed: boolean = true) {\r\n        let p1, p2;\r\n        let l = points.length - 1;\r\n        let i = 0;\r\n        \r\n        this.ctx.save();\r\n\r\n        for(let i = 0; i < l; i++) {\r\n            this.vectorline(x + points[i].x, y + points[i].y, x + points[i + 1].x, y + points[i + 1].y, color);\r\n        }\r\n        \r\n        if (closed) {\r\n            this.vectorline(x + points[l].x, y + points[l].y, x + points[0].x, y + points[0].y, color);\r\n        }\r\n\r\n        this.ctx.restore();\r\n    }\r\n\r\n    rect(x: number, y: number, width: number, height: number, color: string = VectorLine) {\r\n        const { ctx } = this;\r\n        ctx.beginPath();\r\n        ctx.fillStyle = color; \r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    point(p: Point, fillStyle: string = VectorLine) {\r\n        this.rect(p.x, p.y, screen.pointSize, screen.pointSize, fillStyle);\r\n    }\r\n\r\n    background(color: string = BACKGROUND_COLOR) {\r\n        const { ctx } = this;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(0, 0, screen.width, screen.height);\r\n    }\r\n\r\n    scanlines() {\r\n        if (!Global.burn) {\r\n            return;\r\n        }\r\n        \r\n        const { ctx } = this;\r\n        const step = random(2,5);\r\n\r\n        for(let i = 0; i < screen.height - step; i+=step) {\r\n            ctx.beginPath();\r\n            \r\n            ctx.lineWidth = 1;\r\n            ctx.moveTo(0, i);\r\n            ctx.strokeStyle = '#001111';\r\n            ctx.lineTo(screen.width, i);\r\n            ctx.stroke();\r\n\r\n            ctx.moveTo(0, i + 1);\r\n            ctx.strokeStyle = 'rgba(255,0,255,.5)';\r\n            ctx.lineTo(screen.width, i + 1);\r\n            ctx.stroke();\r\n\r\n            ctx.moveTo(0, i + 2);\r\n            ctx.strokeStyle = 'rgba(0,255,255,.3)';\r\n            ctx.lineTo(screen.width, i + 2);\r\n            ctx.stroke();\r\n\r\n            ctx.closePath();\r\n        }\r\n    }\r\n\r\n    bounds(rect: Rect, color: string = VectorLine) {\r\n        const { ctx } = this;\r\n        \r\n        if (!rect) {\r\n            return;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 2; \r\n        ctx.moveTo(rect.x, rect.y);\r\n        ctx.lineTo(rect.x + rect.width, rect.y);\r\n        ctx.lineTo(rect.x + rect.width, rect.y + rect.height);\r\n        ctx.lineTo(rect.x, rect.y + rect.height);\r\n        ctx.lineTo(rect.x, rect.y);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n\r\n    text(text: string, x: number, y: number, size: number, color: string = TextColor) {\r\n        const { ctx } = this;\r\n        \r\n        ctx.save();\r\n        ctx.font = `${size}pt hyperspace`;\r\n        ctx.textBaseline = 'middle';\r\n        ctx.lineWidth = 1;\r\n        \r\n        if (Global.burn) {\r\n            ctx.strokeStyle = magenta5;\r\n            ctx.strokeText(text, x - 2, y - 2);\r\n\r\n            ctx.strokeStyle = cyan5;\r\n            ctx.strokeText(text, x - 1, y - 1);\r\n        }\r\n\r\n        ctx.strokeStyle = color;\r\n        ctx.strokeText(text, x, y);\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    text2(text: string, size: number, cb: (width: number) => Point) {\r\n        const { ctx } = this;\r\n        \r\n        ctx.save();\r\n        ctx.font = `${size}pt hyperspace`;\r\n        ctx.textBaseline = 'middle';\r\n        ctx.lineWidth = 1;\r\n        \r\n        const width = ctx.measureText(text).width;\r\n        const point = cb(width);\r\n\r\n        if (Global.burn) {\r\n            ctx.strokeStyle = magenta(.5);\r\n            ctx.strokeText(text, point.x - 2, point.y - 2);\r\n            \r\n            ctx.strokeStyle = cyan(.5);\r\n            ctx.strokeText(text, point.x - 1, point.y - 1);\r\n        }\r\n\r\n        ctx.strokeStyle = TextColor;\r\n        ctx.strokeText(text, point.x, point.y);\r\n        ctx.restore();\r\n    }\r\n\r\n    text3(text: string, size: number, cb: (width: number) => Point) {\r\n        const { ctx } = this;\r\n        \r\n        ctx.save();\r\n        ctx.font = `${size}pt hyperspace`;\r\n        ctx.textBaseline = 'middle';\r\n        \r\n        const width = ctx.measureText(text).width;\r\n        const point = cb(width);\r\n\r\n        if (Global.burn) {\r\n            ctx.fillStyle = magenta(.5);\r\n            ctx.fillText(text, point.x - 2, point.y - 2);\r\n            \r\n            ctx.fillStyle = cyan(.5);\r\n            ctx.fillText(text, point.x - 1, point.y - 1);\r\n        }\r\n\r\n        ctx.fillStyle = TextColor;\r\n        ctx.fillText(text, point.x, point.y);\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    scorePlayer1(score) {\r\n        const X_START = 100;\r\n        let text = score.toString();\r\n        while (text.length < 2) { \r\n            text = '0' + text \r\n        };\r\n        this.text(text, X_START, Y_START, screen.font.medium);\r\n    }\r\n\r\n    highscore(score: number) {\r\n        let text = score.toString();\r\n        \r\n        while (text.length < 2) { \r\n            text = '0' + text;\r\n        }\r\n\r\n        this.text2(text, screen.font.small, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: Y_START\r\n            }\r\n        });\r\n    }\r\n\r\n    oneCoinOnePlay() {\r\n        this.text2('1  coin  1  play', screen.font.medium, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: (screen.height / 8) * 7\r\n            }\r\n        });\r\n    }\r\n\r\n    pushStart() {\r\n        screen.draw.text3('push start', screen.font.xlarge, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: screen.height / 8\r\n            }\r\n        });\r\n    }\r\n\r\n    player1() {\r\n        screen.draw.text3('player 1', screen.font.xlarge, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: screen.height / 4.5\r\n            }\r\n        });\r\n    }\r\n\r\n    gameOver() {\r\n        screen.draw.text3('game over', screen.font.xlarge, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: screen.height / 4.5\r\n            }\r\n        });\r\n    }\r\n\r\n    copyright() {\r\n        this.text2(CR + ' 1979 atari inc', screen.font.small, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: screen.height - screen.font.small\r\n            }\r\n        });\r\n    }\r\n\r\n    drawExtraLives(lives: number) {\r\n        lives = Math.min(lives, 10);\r\n        const life = new Ship(0, 0);\r\n        const loc = (life.x + life.width) * 2.3;\r\n        \r\n        const y = Y_START + screen.font.medium + 10;\r\n\r\n        for(let i = 0; i < lives; i++) {\r\n            life.origin.x = 80 + (i * loc);\r\n            life.origin.y = y;\r\n            life.render();\r\n        }\r\n    }\r\n\r\n    circle(x: number, y: number, radius: number, color: string = VectorLine) {\r\n        const { ctx } = this;\r\n        \r\n        ctx.setLineDash([1, 10]);\r\n\r\n        if (Global.burn) {\r\n            ctx.beginPath();\r\n            ctx.arc(x - 2, y - 2, radius, 0, 2 * Math.PI, false);\r\n            ctx.strokeStyle = magenta(.2);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(x - 1, y - 1, radius, 0, 2 * Math.PI, false);\r\n            ctx.strokeStyle = cyan(.2);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n        ctx.strokeStyle = color;\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.setLineDash([]);\r\n    }\r\n\r\n    quadtree(tree: IQuadtree) {\r\n        const { ctx } = this;\r\n        \r\n        ctx.save();\r\n\r\n        const drawNode = (node: IQuadtree) => {\r\n            const x = node.xmid - node.width2;\r\n            const y = node.ymid - node.height2;\r\n            \r\n            this.bounds({\r\n                x,\r\n                y,\r\n                width: node.width2 * 2,\r\n                height: node.height2 * 2\r\n            }, '#00FF00');\r\n        }\r\n\r\n        const drawTree = (child: IQuadtree) => {\r\n\r\n            child.nodes.forEach(node => {\r\n                drawTree(node);\r\n            });\r\n\r\n            drawNode(child);\r\n        }\r\n\r\n        drawTree(tree);\r\n\r\n        ctx.restore();\r\n    }\r\n}","import screen from './screen';\r\nimport { Collisions } from './collisions';\r\nimport { World } from './world';\r\n\r\nexport class DemoMode implements IGameState {\r\n\r\n    showPushStart: boolean = true;\r\n    pushStartTimer: number = 0;\r\n    \r\n    constructor(private world: World) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        if (!this.world.started) {\r\n            this.world.startLevel();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.checkCollisions();\r\n\r\n        this.world.updateAlienTimer(dt);\r\n\r\n        if (!this.world.rocks.length && !this.world.scenery.length && !this.world.alien) {  \r\n            this.world.startLevel();\r\n        }\r\n\r\n        this.updatePushStartTimer(dt);\r\n        \r\n        this.world.update(dt);\r\n    }\r\n\r\n    updatePushStartTimer(dt: number) {\r\n        this.pushStartTimer += dt;\r\n\r\n        if (this.pushStartTimer >= .4) {\r\n            this.pushStartTimer = 0;\r\n            this.showPushStart = !this.showPushStart;\r\n        }\r\n    }\r\n\r\n    \r\n    checkCollisions() {\r\n        const { alien, rocks, alienBullets } = this.world;\r\n        const check = !!alien || !!alienBullets.length;\r\n\r\n        if (!check) {\r\n            return;\r\n        }\r\n\r\n        const collisions = new Collisions();\r\n\r\n        collisions.check([alien], rocks, false, (alien, rock) => {\r\n            this.world.shake();\r\n            this.world.alienDestroyed();\r\n            this.world.rockDestroyed(rock);\r\n        });\r\n\r\n        collisions.check(alienBullets, rocks, false, (bullet, rock) => {\r\n            this.world.shake();\r\n            this.world.rockDestroyed(rock);\r\n        });\r\n    }\r\n\r\n    render(delta?: number) {\r\n        this.drawBackground();\r\n        this.drawPushStart();\r\n        this.world.render(delta);\r\n    }\r\n\r\n    private drawBackground() {\r\n        screen.draw.background();\r\n        screen.draw.scorePlayer1(this.world.score);\r\n        screen.draw.oneCoinOnePlay();\r\n        screen.draw.highscore(this.world.highscore);\r\n        screen.draw.copyright();\r\n    }\r\n\r\n    private drawPushStart() {\r\n        if (this.showPushStart) {\r\n            screen.draw.pushStart();\r\n        }\r\n    }\r\n\r\n   \r\n}","import screen from './screen';\r\nimport { Key } from './keys';\r\nimport { Object2D } from './object2d';\r\nimport { Vector } from './vector';\r\nimport { Bullet } from './bullet';\r\nimport { fire, thrust } from './sounds';\r\nimport { random } from './util';\r\n\r\nconst ACCELERATION: number = 0.1;\r\nconst BULLET_SPEED: number = 1000 * screen.objectScale;\r\nconst BULLET_TIME: number = .1;\r\nconst FRICTION: number = 0.005;\r\nconst ROTATION: number = 5;\r\nconst MAX_ACCELERATION: number = 1100 * screen.objectScale;\r\nconst MAX_BULLETS: number = 10;\r\nconst VELOCITY = 150 * screen.objectScale;\r\n\r\nclass Flame extends Object2D {\r\n\r\n    constructor(x: number, y: number) {\r\n        super(x, y);\r\n\r\n        this.points = [\r\n            {x: 5, y: 8},\r\n            {x: 0, y: 20},\r\n            {x: -5, y: 8},\r\n        ];\r\n    }\r\n\r\n    update() {\r\n\r\n    }\r\n\r\n    render() {\r\n        this.draw(false);\r\n    }\r\n}\r\n\r\nexport class Ship extends Object2D {\r\n\r\n    private moving: boolean = false;\r\n    private bulletCount: number = 0;\r\n    private bulletTimer: number = 0;\r\n    private flame: Flame;\r\n    public shield: number = 1;\r\n    public trails = [];\r\n\r\n    constructor(x: number, y: number) {\r\n        super(x, y);\r\n        this.flame = new Flame(x, y);\r\n        this.points = [\r\n            {x: 0, y: -15},\r\n            {x: 10, y: 10},\r\n            {x: 5, y: 5},\r\n            {x: -5, y: 5},\r\n            {x: -10, y: 10}\r\n        ];\r\n\r\n        this.angle = 270;\r\n    }\r\n\r\n    render() {\r\n        this.draw();\r\n        \r\n        if (this.moving && random(1,10) % 2 === 0) {\r\n            this.flame.draw(false);\r\n        }\r\n\r\n        if (this.trails.length) {\r\n            this.trails.forEach(trail => {\r\n                if (trail.alpha > 0) {\r\n                    screen.draw.shape(trail.points, trail.x, trail.y, `rgba(255,0,255,${trail.alpha})`, true);\r\n                    screen.draw.shape(trail.points, trail.x - 1, trail.y - 1, `rgba(0,255,255,${trail.alpha})`, true);\r\n                    trail.alpha -= .1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.move(dt);\r\n        this.flame.move(dt);\r\n\r\n        if (Key.isThrust()) {\r\n            this.moving = true;\r\n            this.thrust();\r\n        } else {\r\n            this.moving = false;\r\n        }\r\n\r\n        if (Key.wasRotateLeft) {\r\n            this.rotate(-1);\r\n        } \r\n\r\n        if (Key.isRotateLeft()) {\r\n            this.rotate(-ROTATION);\r\n        } \r\n\r\n        if (Key.wasRotateRight) {\r\n            this.rotate(1);\r\n        }\r\n\r\n        if (Key.isRotateRight()) {\r\n            this.rotate(ROTATION);\r\n        } \r\n\r\n        if (Key.isFire()) {\r\n            this.fire();\r\n        }\r\n\r\n        if (Key.wasHyperspace()) {\r\n            this.hyperspace(); \r\n        }\r\n\r\n        if (this.bulletTimer >= 0) {\r\n            this.bulletTimer -= dt;\r\n        }\r\n\r\n        if (this.moving && (Math.abs(this.velocity.x) > 200 || Math.abs(this.velocity.y) > 200)) {\r\n            this.trails.push({\r\n                points: [...this.points],\r\n                x: this.origin.x,\r\n                y: this.origin.y,\r\n                alpha: .5\r\n            });\r\n        } else {\r\n            this.trails.length = 0;\r\n        }\r\n\r\n        // slow down ship over time\r\n        if (!this.moving) {\r\n            this.velocity.friction(FRICTION);\r\n            this.flame.velocity = this.velocity;\r\n        }\r\n    }\r\n\r\n    rotate(n: number) {\r\n        super.rotate(n);\r\n        this.flame.rotate(n);\r\n    }\r\n\r\n    private thrust() {\r\n        const v = Vector.fromAngle(this.angle, VELOCITY * ACCELERATION);\r\n\r\n        if (this.velocity.magnitude < MAX_ACCELERATION) {\r\n            this.velocity.add(v);\r\n            this.flame.velocity = this.velocity;\r\n        }\r\n\r\n        thrust.play();\r\n    }\r\n\r\n    private fire() {\r\n        if (this.bulletTimer <= 0 && this.bulletCount < MAX_BULLETS) {\r\n            \r\n            fire.play();\r\n\r\n            this.bulletTimer = BULLET_TIME;\r\n            this.bulletCount++;\r\n\r\n            const velocity = Vector.fromAngle(this.angle);\r\n            const bullet = new Bullet(this.origin, velocity, 1);\r\n\r\n            bullet.on('expired', () => {\r\n                this.bulletCount--;\r\n            });\r\n\r\n            // move bullet to nose of ship\r\n            const bv = bullet.velocity.copy();\r\n            bv.scale(20, 20);\r\n            bullet.origin.add(bv);\r\n            \r\n            // adjust for speed of ship if bullets and ship are moving in same general direction\r\n            let speed = 0; \r\n            const dot = this.velocity.dot(bullet.velocity);\r\n            \r\n            if (dot > 0) {\r\n                speed = this.velocity.magnitude;\r\n            }\r\n\r\n            speed = Math.max(BULLET_SPEED, speed + BULLET_SPEED);\r\n\r\n            bullet.velocity.scale(speed, speed);\r\n            \r\n            // kick back\r\n            let kba = (this.angle + 180) % 360;\r\n            let kbv = Vector.fromAngle(kba, 5);\r\n            \r\n            this.origin.add(kbv);\r\n            this.flame.origin.add(kbv);\r\n\r\n            this.trigger('fire', bullet);\r\n        }\r\n    }\r\n\r\n    hyperspace() {\r\n        let x = random(40, screen.width - 40);\r\n        let y = random(40, screen.height - 40);\r\n        \r\n        this.velocity = new Vector(0, 0);\r\n        this.flame.velocity = this.velocity;\r\n\r\n        this.x = this.flame.x = x;\r\n        this.y = this.flame.y = y;\r\n    }\r\n\r\n    destroy() {\r\n        this.trigger('expired');\r\n    }\r\n}","import screen from './screen';\r\nimport { EventSource } from './events';\r\n\r\nexport class Flash extends EventSource implements IGameState { \r\n\r\n    constructor(private frames: number) {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        this.draw();   \r\n    }\r\n\r\n    update(dt: number) {\r\n        this.frames--;\r\n        if (this.frames <= 0) {\r\n            this.trigger('expired');\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        screen.draw.background('#ffffff');\r\n        screen.draw.scanlines();\r\n    }\r\n    \r\n}","import screen from './screen';\r\nimport { white } from './draw';\r\nimport { Object2D } from './object2d';\r\nimport { Vector } from './vector';\r\n\r\nexport class Achievement extends Object2D { \r\n\r\n    life: number = 1;   // in seconds\r\n    fontSize: number = screen.font.xlarge * 2;\r\n    \r\n    heightText: number = screen.height / 4;\r\n    heightScore: number = screen.height / 6;\r\n\r\n    constructor(private text: string, score: number) {\r\n        super(screen.width2, screen.height2);\r\n        this.score = score;\r\n        //this.velocity = new Vector(0, -1);\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.life -= dt;\r\n        this.fontSize -= 1;\r\n\r\n        if (this.life <= 0) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        screen.draw.text3(this.text, this.fontSize, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: this.heightText\r\n            }\r\n        });\r\n\r\n        screen.draw.text3(`+${this.score}`, this.fontSize, (width) => {\r\n            return {\r\n                x: screen.width2 - (width / 2),\r\n                y: this.heightScore\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    destroy() {\r\n        this.life = 0;\r\n        this.trigger('expired');\r\n    }\r\n}","import w01 from './assets/getpowerup.wav';\r\nimport w02 from './assets/powerup.wav';\r\nimport w03 from './assets/life.wav';\r\nimport w04 from './assets/thumphi.wav';\r\nimport w05 from './assets/thumplo.wav';\r\nimport w06 from './assets/ssaucer.wav';\r\nimport w07 from './assets/lsaucer.wav';\r\nimport w08 from './assets/explode3.wav';\r\nimport w09 from './assets/explode2.wav';\r\nimport w10 from './assets/explode1.wav';\r\nimport w11 from './assets/sfire.wav';\r\nimport w12 from './assets/thrust.wav';\r\nimport w13 from './assets/fire.wav';\r\n\r\n// hack for webpack to include sound files\r\nconsole.log(w01 || 'loading sound');\r\nconsole.log(w02 || 'loading sound');\r\nconsole.log(w03 || 'loading sound');\r\nconsole.log(w04 || 'loading sound');\r\nconsole.log(w05 || 'loading sound');\r\nconsole.log(w06 || 'loading sound');\r\nconsole.log(w07 || 'loading sound');\r\nconsole.log(w08 || 'loading sound');\r\nconsole.log(w09 || 'loading sound');\r\nconsole.log(w10 || 'loading sound');\r\nconsole.log(w11 || 'loading sound');\r\nconsole.log(w12 || 'loading sound');\r\nconsole.log(w13 || 'loading sound');\r\n\r\nimport { Howl } from 'howler';\r\n\r\nconst VOLUME = .5;\r\n\r\nlet soundOn: boolean = true;\r\n\r\nexport const all = [];\r\n\r\nfunction createSound(options) {\r\n    let count = 0;\r\n\r\n    const sound = new Howl(options);\r\n\r\n    sound.on('end', () => {\r\n        if (options.max) {\r\n            count--;\r\n        }\r\n    });\r\n\r\n    const play = sound.play.bind(sound);\r\n    const canPlay = options.max ? count < options.max && soundOn : soundOn;\r\n\r\n    sound.play = () => {\r\n        if (soundOn) {\r\n            \r\n            if (options.max) {\r\n                if (count < options.max) {\r\n                    play();\r\n                    count++;\r\n                }\r\n            } else {\r\n                play();\r\n            }\r\n        }\r\n    };\r\n\r\n    sound._origVolume = options.volume;\r\n\r\n    all.push(sound);\r\n    return sound;\r\n}\r\n\r\nexport const fire = createSound({\r\n    src: ['./assets/fire.wav'],\r\n    volume: .2\r\n});\r\n\r\nexport const thrust = createSound({\r\n    src: ['./assets/thrust.wav'],\r\n    volume: 0.3\r\n});\r\n\r\nexport const alienFire = createSound({\r\n    src: ['./assets/sfire.wav'],\r\n    volume: VOLUME\r\n});\r\n\r\nexport const largeExplosion = createSound({\r\n    src: ['./assets/explode1.wav'],\r\n    volume: VOLUME,\r\n    max: 2\r\n});\r\n\r\nexport const mediumExplosion = createSound({\r\n    src: ['./assets/explode2.wav'],\r\n    volume: VOLUME,\r\n    max: 2\r\n});\r\n\r\nexport const smallExplosion = createSound({\r\n    src: ['./assets/explode3.wav'],\r\n    volume: VOLUME,\r\n    max: 2\r\n});\r\n\r\nexport const largeAlien = createSound({\r\n    src: ['./assets/lsaucer.wav'],\r\n    volume: VOLUME,\r\n    loop: true\r\n});\r\n\r\nexport const smallAlien = createSound({\r\n    src: ['./assets/ssaucer.wav'],\r\n    volume: VOLUME,\r\n    loop: true\r\n});\r\n\r\nexport const thumpLo = createSound({\r\n    src: ['./assets/thumplo.wav'],\r\n    volume: .3\r\n});\r\n\r\nexport const thumpHi = createSound({\r\n    src: ['./assets/thumphi.wav'],\r\n    volume: .3\r\n});\r\n\r\nexport const extraLife = createSound({\r\n    src: ['./assets/life.wav'],\r\n    volume: .5\r\n});\r\n\r\nexport const powerup = createSound({\r\n    src: ['./assets/powerup.wav'],\r\n    volume: .5\r\n});\r\n\r\nexport const getPowerup = createSound({\r\n    src: ['./assets/getpowerup.wav'],\r\n    volume: .5\r\n});\r\n\r\nexport const Sound = {\r\n    on: () => {\r\n        soundOn = true;\r\n        all.forEach(sound => sound.volume(sound._origVolume));\r\n    },\r\n    off: () => {\r\n        soundOn = false;\r\n        // do not \"stop\" sound, just set volume to 0.\r\n        all.forEach(sound => sound.volume(0));\r\n    },\r\n    stop: () => {\r\n        all.forEach(sound => sound.stop());\r\n    }\r\n}","import screen from './screen';\r\nimport { Object2D } from './object2d';\r\nimport { Vector } from './vector';\r\nimport { random, randomFloat } from './util';\r\nimport { largeExplosion, mediumExplosion, smallExplosion } from './sounds';\r\n\r\nexport enum RockSize {\r\n    Small = 5,\r\n    Medium = 10,\r\n    Large = 20\r\n}\r\n\r\nexport class Rock extends Object2D {\r\n\r\n    rot: number;\r\n    rotTimer: number = 0;\r\n    size: RockSize;\r\n    timeToRot: number;\r\n    \r\n    private rock1 = [\r\n        [ .5, -2 ],\r\n        [ 2, -1 ],\r\n        [ 2, -.7 ],\r\n        [ 1.2, 0 ],\r\n        [ 2, 1 ],\r\n        [ 1, 2 ],\r\n        [ .5, 1.5 ],\r\n        [ -1, 2 ],\r\n        [ -2, .7 ],\r\n        [ -2, -1 ],\r\n        [ -.5, -1 ],\r\n        [ -1, -2 ]\r\n    ];\r\n\r\n    private rock2 = [\r\n        [ 0, -1.5 ],\r\n        [ 1, -2 ],\r\n        [ 2, -1 ],\r\n        [ 1, -.5 ],\r\n        [ 2, .5 ],\r\n        [ 1, 2 ],\r\n        [ -.5, 1.5 ],\r\n        [ -1, 2 ],\r\n        [ -2, 1 ],\r\n        [ -1.5, 0 ],\r\n        [ -2, -1 ],\r\n        [ -1, -2 ]\r\n    ];\r\n\r\n    private rock3 = [\r\n        [ 0, -1 ],\r\n        [ 1, -2 ],\r\n        [ 2, -1 ],\r\n        [ 1.5, 0 ],\r\n        [ 2, 1 ],\r\n        [ 1, 2 ],\r\n        [ -1, 2 ],\r\n        [ -2, 1 ],\r\n        [ -2, -1 ],\r\n        [ -1, -2 ]\r\n    ];\r\n\r\n    private rocks = [this.rock1, this.rock2, this.rock3];\r\n\r\n    constructor(x: number, y: number, v: Vector, size: RockSize, speed: number = 1) {\r\n        super(x, y);\r\n        \r\n        const velocity = speed * screen.objectScale;\r\n\r\n        this.velocity.x = v.x * velocity;\r\n        this.velocity.y = v.y * velocity;\r\n        \r\n        const type = random(0, 2);\r\n        const def = this.rocks[type];\r\n        \r\n        this.points = def.map(p => {\r\n            return {\r\n                x: p[0] * size,\r\n                y: p[1] * size\r\n            }\r\n        });\r\n\r\n        this.size = size;\r\n        this.rotate(random(1, 90));\r\n        this.rot = random(.01, 1) % 2 === 0 ? 1 : -1;\r\n        this.timeToRot = random(1,5);\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.rotTimer += 1;\r\n        this.move(dt);\r\n\r\n        if (this.rotTimer === this.timeToRot) {\r\n            this.rotate(this.rot);\r\n            this.rotTimer = 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.draw();\r\n    }\r\n\r\n    get direction() {\r\n        const radians = Math.atan2(this.velocity.y, this.velocity.x);\r\n        let degrees = radians * (180 / Math.PI);\r\n        degrees = degrees > 0.0 ? degrees : 360 + degrees;\r\n        return Math.floor(degrees);\r\n    }\r\n\r\n    split(): Rock[] {\r\n        let sound;\r\n\r\n        switch(this.size) {\r\n            case RockSize.Large:\r\n                sound = largeExplosion;\r\n                break;\r\n\r\n            case RockSize.Medium:\r\n                sound = mediumExplosion;\r\n                break;\r\n\r\n            case RockSize.Small:\r\n                sound = smallExplosion;\r\n                break;\r\n        }\r\n\r\n        const rate = randomFloat(.7, 1);\r\n        sound.rate(rate);\r\n        sound.play();\r\n\r\n        if (this.size > RockSize.Small) {\r\n\r\n            let angle1 = random(this.direction, this.direction + 80);\r\n            let angle2 = random(this.direction - 80, this.direction);\r\n\r\n            if (angle1 < 0) {\r\n                angle1 += 360;\r\n            }\r\n\r\n            if (angle1 > 360) {\r\n                angle1 -= 360;\r\n            }\r\n\r\n            if (angle2 < 0) {\r\n                angle2 += 360;\r\n            }\r\n\r\n            if (angle2 > 360) {\r\n                angle2 -= 360;\r\n            }\r\n\r\n            const size = this.size === RockSize.Large ? RockSize.Medium : RockSize.Small;\r\n            const v1 = Vector.fromAngle(angle1);\r\n            const v2 = Vector.fromAngle(angle2);\r\n            const speed1 = size === RockSize.Medium ? random(150, 250) : random(250, 350);\r\n            const speed2 = size === RockSize.Medium ? random(150, 250) : random(250, 350);\r\n            const rock1 = new Rock(this.origin.x, this.origin.y, v1, size, speed1);\r\n            const rock2 = new Rock(this.origin.x, this.origin.y, v2, size, speed2);\r\n            \r\n             return [rock1, rock2]\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    get score(): number {\r\n        return this.size === RockSize.Large ? 20 : this.size === RockSize.Medium ? 50 : 100;\r\n    }\r\n}\r\n\r\nexport function createRocks(level: number): Rock[] {\r\n    const rocks = [];\r\n    const count = Math.min(level + 3, 10);\r\n    const speed = 150;\r\n    const offset = 20;\r\n\r\n    for(let i = 0; i < count; i++) {\r\n        const zone = random(1,4);\r\n        const v = Vector.fromAngle(random(1, 360));\r\n        let x: number;\r\n        let y: number;\r\n\r\n        switch (zone) {\r\n            case 1:\r\n                x = random(offset, screen.width - offset); \r\n                y = random(offset, offset * 2); \r\n                break;\r\n            case 2:\r\n                x = random(screen.width - (offset * 2), screen.width - offset);\r\n                y = random(screen.height - offset, screen.height - offset);\r\n                break;\r\n            case 3:\r\n                x = random(offset, screen.width - offset);\r\n                y = random(screen.height - offset, screen.height - offset); \r\n                break;\r\n            default:\r\n                x = random(offset, offset * 2);\r\n                y = random(screen.height - offset, screen.height - offset);\r\n                break;\r\n        }\r\n\r\n        const rock = new Rock(x, y, v, RockSize.Large, speed);\r\n        rocks.push(rock);\r\n    } \r\n\r\n    return rocks;\r\n}\r\n","export class Quadtree implements IQuadtree {\r\n\r\n    nodes: Quadtree[];\r\n    objects: Rect[];\r\n    width2: number;\r\n    height2: number;\r\n    xmid: number;\r\n    ymid: number;\r\n\r\n    constructor(public bounds: Rect, private maxObjects: number = 1, private maxLevels: number = 4, private level = 0) {\r\n        this.objects = [];\r\n        this.nodes = [];\r\n        this.width2 = this.bounds.width / 2;\r\n        this.height2 = this.bounds.height / 2;\r\n        this.xmid = this.bounds.x + this.width2;\r\n        this.ymid = this.bounds.y + this.height2;\r\n    }\r\n\r\n    insert(rect: Rect) {\r\n        if (!rect) {\r\n            return;\r\n        }\r\n        \r\n        let i = 0;\r\n        let indices: number[];\r\n\r\n        if (this.nodes.length) {\r\n            indices = this.getIndex(rect);\r\n\r\n            if (indices.length) {\r\n                indices.forEach(i => {\r\n                    this.nodes[i].insert(rect);\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.objects.push(rect);\r\n\r\n        if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\r\n            if (!this.nodes.length) {\r\n                this.split();\r\n            }\r\n\r\n            while (i < this.objects.length) {\r\n                indices = this.getIndex(this.objects[i]);\r\n\r\n                if (indices.length) {\r\n                    let object = this.objects.splice(i, 1)[0];\r\n                    indices.forEach(n => {\r\n                        this.nodes[n].insert(object);\r\n                    });\r\n                } else {\r\n                    i = i + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    retrieve(rect: Rect) {\r\n        if (!rect) {\r\n            return [];\r\n        }\r\n        \r\n        let indices = this.getIndex(rect);\r\n        let result = this.objects;\r\n\r\n        if (this.nodes.length) {\r\n            if (indices.length) {\r\n                indices.forEach(i => {\r\n                    result = result.concat(this.nodes[i].retrieve(rect));\r\n                });\r\n            } else {\r\n                for (let i = 0; i < this.nodes.length; i++) {\r\n                    result = result.concat(this.nodes[i].retrieve(rect));\r\n                }\r\n            }\r\n        }\r\n\r\n        return result.filter((x, n, a) => a.indexOf(x) === n);\r\n    };\r\n\r\n    clear() {\r\n        this.objects = [];\r\n\r\n        for (let i = 0; i < this.nodes.length; i++) {\r\n            if (this.nodes[i]) {\r\n                this.nodes[i].clear();\r\n            }\r\n        }\r\n\r\n        this.nodes = [];\r\n    };\r\n\r\n    private getIndex(rect: Rect): number[] {\r\n        if (!rect) {\r\n            return [];\r\n        }\r\n        \r\n        const results = [];\r\n        const { xmid, ymid } = this;\r\n        const top = (rect.y <= ymid); \r\n        const bottom = (rect.y > ymid);\r\n\r\n        if (rect.x <= xmid) {\r\n            if (top) {\r\n                results.push(1);\r\n                let zero = false;\r\n\r\n                if (rect.x + rect.width > xmid) {\r\n                    results.push(0);\r\n                    zero = true;\r\n                }\r\n\r\n                if (rect.y + rect.height > ymid) {\r\n                    results.push(2);\r\n                    if (zero) {\r\n                        results.push(3);\r\n                    }\r\n                }\r\n            } else if (bottom) {\r\n                results.push(2);\r\n\r\n                if (rect.x + rect.width > xmid) {\r\n                    results.push(3);\r\n                }\r\n            }\r\n\r\n        } else if (rect.x > xmid) {\r\n            if (top) {\r\n                results.push(0);\r\n                if (rect.y + rect.height > ymid) {\r\n                    results.push(3);\r\n                }\r\n            } else {\r\n                results.push(3)\r\n            }\r\n        }\r\n\r\n        return results;\r\n    };\r\n\r\n    private split() {\r\n        const width = Math.round(this.width2);\r\n        const height = Math.round(this.height2);\r\n        const x = Math.round(this.bounds.x);\r\n        const y = Math.round(this.bounds.y);\r\n\r\n        const create = (x, y) => {\r\n            const bounds: Rect = {\r\n                x: x,\r\n                y: y,\r\n                width: width,\r\n                height: height\r\n            };\r\n            return new Quadtree(bounds, this.maxObjects, this.maxLevels, this.level + 1);\r\n        };\r\n\r\n        // top right, top left, bottom left, bottom right\r\n        this.nodes = [create(x + width, y), create(x, y), create(x, y + height), create(x + width, y + height)];\r\n    };\r\n}","import { Ship } from './ship';\r\nimport { Bullet } from './bullet';\r\nimport { Alien, SmallAlien, BigAlien } from './alien';\r\nimport { Explosion } from './explosion';\r\nimport { Shockwave } from './shockwave';\r\nimport { Flash } from './flash';\r\nimport { Achievement } from './achievement';\r\nimport { Rock, createRocks } from './rocks';\r\nimport { ScoreMarker } from './scoreMarker';\r\nimport { SlowMoTimer } from './slowMoTimer';\r\nimport { Object2D } from './object2d';\r\nimport { random } from './util';\r\nimport screen from './screen';\r\nimport { smallAlien, largeAlien, alienFire, largeExplosion, extraLife, getPowerup } from './sounds';\r\n\r\nconst EXTRA_LIFE = 10000;\r\nconst SHAKE_TIME = .5;\r\nconst DRAMATIC_PAUSE_TIME = 5;\r\n\r\nvar explosionCount = 0;\r\nvar maxExplosionCount = 0;\r\nvar maxExplosionThreshold = 10;\r\nvar explosionScores: number[] = [];\r\n\r\nclass ExplostionTracker {\r\n\r\n}\r\n\r\nexport class World {\r\n    level: number = 1;\r\n    extraLifeScore: number = 0;\r\n    highscore: number; \r\n    score: number = 0;\r\n    lives: number = 3; \r\n    \r\n    ship: Ship;\r\n    shipBullets: Bullet[] = [];\r\n    alien: Alien;\r\n    alienBullets: Bullet[] = [];\r\n    shockwaves: Shockwave[] = [];\r\n    rocks: Rock[] = [];\r\n\r\n    // things with no collision detection - markers, explosions, flash, etc.\r\n    scenery: IGameState[] = [];\r\n\r\n    shipTimer: number = 0;\r\n    alienTimer: number = 0;\r\n    levelTimer: number = 0;\r\n    gameOverTimer: number = 0;\r\n    shakeTimer: number = 0;\r\n    powerupTimer: number = 0;\r\n    dramticPauseTimer: number = 0;\r\n    slowMoTimer: SlowMoTimer = null;\r\n\r\n    gameOver: boolean = false;\r\n    started: boolean = false;\r\n\r\n    constructor(highscore: number) {\r\n        this.highscore = highscore;\r\n    }\r\n\r\n    get objects(): any {\r\n        return [this.ship, this.alien, ...this.shipBullets, ...this.alienBullets, ...this.rocks, ...this.shockwaves, ...this.scenery];\r\n    }\r\n\r\n    update(dt: number) {\r\n        \r\n        if (this.slowMoTimer) {\r\n            dt = this.slowMoTimer.adjust(dt);\r\n        }\r\n\r\n        if (this.dramticPauseTimer > 0) {\r\n            this.dramticPauseTimer--;\r\n            return;\r\n        }\r\n\r\n        // shaky cam\r\n        if (this.shakeTimer > 0) {\r\n            this.shakeTimer -= dt;\r\n        }\r\n\r\n        this.objects.forEach(obj => {\r\n            if (obj) {\r\n                obj.update(dt);\r\n            }\r\n        });\r\n    }\r\n    \r\n    render(dt?: number) {\r\n        if (this.slowMoTimer) {\r\n            dt = this.slowMoTimer.adjust(dt);\r\n        }\r\n        \r\n        if (this.shakeTimer > 0) {\r\n            screen.preShake();\r\n        }\r\n\r\n        this.objects.forEach(obj => {\r\n            if (obj) {\r\n                obj.render(dt);\r\n            }\r\n        });\r\n\r\n        if (this.shakeTimer > 0) {\r\n            screen.postShake();\r\n        }\r\n    }\r\n\r\n    startLevel() {\r\n        this.level++;\r\n        this.levelTimer = 0;\r\n        this.powerupTimer = 0;\r\n\r\n        if (!this.alienTimer) {\r\n            this.alienTimer = random(10, 15);\r\n        }\r\n        \r\n        this.scenery.length = 0;\r\n        this.shipBullets.forEach(bullet => bullet.destroy());\r\n\r\n        this.addRocks();\r\n    }\r\n\r\n    private addRocks() {\r\n        this.rocks = createRocks(this.level);\r\n    }\r\n\r\n    addShip(x: number, y: number) {\r\n        this.ship = new Ship(x, y);\r\n        \r\n        this.ship.on('fire', (ship, bullet) => {\r\n\r\n            bullet.on('expired', () => {\r\n                this.shipBullets = this.shipBullets.filter(x => x !== bullet);\r\n            });\r\n\r\n            this.shipBullets.push(bullet);\r\n        });\r\n\r\n        this.ship.on('expired', () => {\r\n            this.lives--;\r\n            this.ship = null;\r\n            this.shipBullets.length = 0;\r\n        });\r\n    }\r\n\r\n    createExplosion(obj: Object2D, size: number = 100, multiplier: number = 1): { explosion: Explosion, shockwave: Shockwave } {\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        \r\n        const explosion = new Explosion(obj.origin.x, obj.origin.y, size);\r\n        explosionCount++;\r\n\r\n        explosionScores.push(obj.score);\r\n        \r\n        if (explosionScores.length > maxExplosionThreshold) {\r\n            explosionScores.pop();\r\n        }\r\n\r\n        if (explosionCount > maxExplosionCount) {\r\n            maxExplosionCount = explosionCount;\r\n\r\n            if (maxExplosionCount > maxExplosionThreshold) {\r\n                explosionCount = 0;\r\n                console.log('MAX DAMAGE ACHEIVEMENT');\r\n                \r\n                this.setSlowMo(.25, 4);\r\n                \r\n                let bonus = 0;\r\n                explosionScores.forEach(v => bonus += v);\r\n                bonus *=5;\r\n\r\n                const achievement = new Achievement(`MASSIVE DAMAGE`, bonus);\r\n                this.addScenery(achievement);\r\n                this.addScore(achievement);\r\n\r\n                //const marker = new ScoreMarker(obj, `+${bonus}`);\r\n                //this.addScenery(marker);\r\n\r\n                // Track score of each explosion and display total points with achievement\r\n\r\n                maxExplosionThreshold += 10;\r\n            }\r\n        }\r\n\r\n        explosion.on('expired', () => {\r\n            explosionCount--;\r\n        });\r\n\r\n        this.addScenery(explosion);\r\n\r\n        const shockwave = new Shockwave(obj.origin.x, obj.origin.y, obj.velocity, size, multiplier);\r\n\r\n        shockwave.on('expired', () => {\r\n            this.shockwaves = this.shockwaves.filter(x => x !== shockwave);\r\n        });\r\n\r\n        this.shockwaves.push(shockwave);\r\n\r\n        return {\r\n            explosion,\r\n            shockwave\r\n        }\r\n    }\r\n\r\n    setSlowMo(time: number, factor: number) {\r\n        if (!this.slowMoTimer) {\r\n            this.slowMoTimer = new SlowMoTimer(time, factor);\r\n            this.slowMoTimer.on('expired', () => this.slowMoTimer = null);\r\n        }\r\n    }\r\n\r\n    shipDestroyed() {\r\n        if (this.ship) {\r\n            largeExplosion.play();\r\n            this.createExplosion(this.ship);\r\n            this.addFlash(5);\r\n            this.ship.destroy();\r\n            this.setSlowMo(.25, 8);\r\n\r\n        }\r\n    }\r\n\r\n    alienDestroyed() {\r\n        if (this.alien) {\r\n            this.addFlash(5);\r\n            this.createExplosion(this.alien);\r\n            this.alien.destroy();\r\n        }\r\n    }\r\n\r\n    addFlash(frames: number) {\r\n        const flash = new Flash(frames);\r\n        this.addScenery(flash);\r\n    }\r\n\r\n    addScenery(obj: any) {\r\n        obj.on('expired', () => {\r\n            this.scenery = this.scenery.filter(x => x !== obj);\r\n        });\r\n\r\n        this.scenery.push(obj);\r\n    }\r\n\r\n    rockDestroyed(rock: Rock, multiplier: number = 1) {\r\n        let boom = this.createExplosion(rock, rock.size * 5, multiplier);\r\n        let debris = rock.split();\r\n        \r\n        this.rocks = this.rocks.filter(x => x !== rock);\r\n        this.rocks.push(...debris);\r\n\r\n        this.shockwaves.forEach(shockwave => {\r\n            shockwave.rocks = shockwave.rocks.filter(x => x !== rock);\r\n        });\r\n\r\n        boom.shockwave.rocks = debris;\r\n\r\n        rock = null;\r\n    }\r\n\r\n    addAlien() {\r\n        const lvl = Math.min(this.level, 14);\r\n        let little = false;\r\n        let alienSound = largeAlien;\r\n\r\n        if (this.score >= 40000) {\r\n            little = true;\r\n        } else {\r\n            switch(lvl) {\r\n                case 7:\r\n                    little = this.levelTimer > 60 && random(1, 3) === 2;\r\n                    break;\r\n                case 8:\r\n                    little = this.levelTimer > 30 && random(1, 10) % 2 === 0; \r\n                    break;\r\n                default:\r\n                    little = random(1, 10) <= lvl + 2; \r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (little) {\r\n            alienSound = smallAlien;\r\n            this.alien = new SmallAlien(this.ship);\r\n        } else {\r\n            this.alien = new BigAlien();\r\n        }\r\n\r\n        alienSound.play();\r\n        \r\n        this.alien.on('expired', () => {\r\n            alienFire.stop();\r\n            alienSound.stop();\r\n            largeExplosion.play();\r\n            this.alien = null;\r\n            this.alienBullets.forEach(b => b.destroy());\r\n            this.alienBullets.length = 0; \r\n        });\r\n\r\n        this.alien.on('fire', (alien, bullet: Bullet) => {\r\n            alienFire.play();\r\n            \r\n            bullet.on('expired', () => {\r\n                this.alienBullets = this.alienBullets.filter(x => x !== bullet);\r\n            });\r\n\r\n            this.alienBullets.push(bullet);\r\n        });\r\n\r\n    }   \r\n\r\n    addScore(obj: Object2D) {\r\n        this.score += obj.score;\r\n        this.extraLifeScore += obj.score;\r\n\r\n        if (this.score > this.highscore) {\r\n            this.highscore = this.score;\r\n        }\r\n\r\n        if (this.extraLifeScore >= EXTRA_LIFE) {\r\n            this.lives++;\r\n            this.extraLifeScore -= EXTRA_LIFE;\r\n            extraLife.play();\r\n        }\r\n\r\n        this.addScenery(new ScoreMarker(obj, `${obj.score}`));\r\n    }\r\n\r\n    addPowerup() {\r\n        getPowerup.play();\r\n    }\r\n\r\n    shake() {\r\n        if (this.shakeTimer <= 0.0) {\r\n            this.shakeTimer = SHAKE_TIME;\r\n        }\r\n    }\r\n\r\n    tryPlaceShip(dt) {\r\n        this.shipTimer += dt;\r\n\r\n        if (this.shipTimer <= 2) {\r\n            return;\r\n        }\r\n\r\n        let rect: Rect = screen.shipRect;\r\n\r\n        let collided = false;\r\n\r\n        this.rocks.forEach(rock => {\r\n            collided = collided || rock.collided(rect);\r\n        });\r\n\r\n        if (this.alien) {\r\n            collided = collided || this.alien.collided(rect);\r\n        }\r\n\r\n        if (!collided) {\r\n            this.shipTimer = 0;\r\n            this.addShip(screen.width2, screen.height2);\r\n        }\r\n\r\n    }\r\n\r\n    updateAlienTimer(dt: number) {\r\n        if (!this.alien) {\r\n            this.alienTimer -= dt;\r\n            \r\n            if (this.alienTimer <= 0) {\r\n                this.addAlien();\r\n                this.alienTimer = random(10, 15);\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldTryToPlaceShip(): boolean {\r\n        return !!this.shipTimer || (!this.ship && !!this.lives);\r\n    }\r\n\r\n    shouldCheckForNextLevel(): boolean {\r\n        return !this.rocks.length && !!this.lives;\r\n    }\r\n\r\n    shouldCheckCollisions(): boolean {\r\n        return !!this.ship || !!this.shipBullets.length;\r\n    }\r\n}","\r\n/* lookup tables */\r\n\r\nconst RAD = {};\r\nconst COS = {};\r\nconst SIN = {};\r\nconst r = Math.PI / 180;\r\n\r\nfor(let i = 0; i <= 360; i++) {\r\n    RAD[i] = i * r; \r\n    COS[i] = Math.cos(RAD[i]);\r\n    SIN[i] = Math.sin(RAD[i]);\r\n\r\n    RAD[-i] = -i * r; \r\n    COS[-i] = Math.cos(RAD[-i]);\r\n    SIN[-i] = Math.sin(RAD[-i]);\r\n}\r\n\r\nexport { RAD, COS, SIN } \r\n\r\n","import screen from './screen';\r\nimport { Quadtree } from './quadtree';\r\nimport { Object2D } from './object2d';\r\nimport { lineclip } from './lineclip';\r\n\r\nexport type CollisionCallback<TSource, TTarget> = (a: TSource, b: TTarget) => void;\r\nexport type BulletCollisionCallback<TSource, TTarget> = (a: TSource, b: TSource, c: TTarget) => void;\r\n\r\nexport class Collisions {\r\n\r\n    tree: Quadtree;\r\n\r\n    constructor() {\r\n        this.tree = new Quadtree({\r\n            x: 0, \r\n            y: 0, \r\n            width: screen.width, \r\n            height: screen.height\r\n        });\r\n    }\r\n\r\n    // special case for ship bullets\r\n    bulletCheck<TSource extends Object2D, TTarget extends Object2D>(bullets: TSource[], targets: TTarget[], cb: CollisionCallback<TSource, TTarget>, dcb?: BulletCollisionCallback<TSource, TTarget>) {\r\n        if (!bullets || !bullets.length || !targets || !targets.length) {\r\n            return;\r\n        }\r\n\r\n        let candidates: TTarget[] = [];\r\n        let results = [];\r\n\r\n        this.tree.clear();\r\n        \r\n        targets.forEach(target => {\r\n            this.tree.insert(target);\r\n        });\r\n\r\n        // check bullet here\r\n        for(let i = 0; i < bullets.length; i++) {\r\n\r\n            const bullet1 = bullets[i];\r\n            \r\n            candidates.length = 0;\r\n            candidates.push(...this.tree.retrieve(bullet1) as any);\r\n            \r\n            candidates.forEach(candidate => {\r\n                \r\n                if (candidate.collided(bullet1)) {\r\n                    cb(bullet1, candidate);\r\n                    return; // bail\r\n                } else if (dcb) {\r\n                    dcb(bullet1, bullet1, candidate);\r\n                }\r\n                \r\n                // line clip\r\n                if (i < bullets.length - 1) {\r\n                    const bullet2 = bullets[i + 1];\r\n                    const bbox = [candidate.x, candidate.y, candidate.x + candidate.width, candidate.y + candidate.height ];\r\n\r\n                    results.length = 0;\r\n                    \r\n                    lineclip([[bullet1.origin.x, bullet1.origin.y], [bullet2.origin.x, bullet2.origin.y]], bbox, results);\r\n\r\n                    if (results.length) {\r\n                        if (dcb) {\r\n                            dcb(bullet1, bullet2, candidate);\r\n                        }\r\n                        \r\n                        cb(bullet1, candidate);\r\n                    } \r\n                }\r\n                \r\n\r\n            });\r\n        }\r\n\r\n    } \r\n\r\n\r\n    check<TSource extends Object2D, TTarget extends Object2D>(sources: TSource[], targets: TTarget[], deep: boolean, cb: CollisionCallback<TSource, TTarget>, dcb?: CollisionCallback<TSource, TTarget>) {\r\n        if (!sources || !sources.length || !targets || !targets.length) {\r\n            return;\r\n        }\r\n\r\n        this.tree.clear();\r\n        \r\n        targets.forEach(target => {\r\n            this.tree.insert(target);\r\n        });\r\n        \r\n        sources.forEach(source => {\r\n\r\n            const candidates: any[] = this.tree.retrieve(source);\r\n            \r\n            candidates.forEach(candidate => {\r\n                \r\n                // AABB first\r\n               if (candidate.collided(source)) {\r\n                    if (deep) {\r\n                        if (this.pointsInPolygon(source, candidate || this.pointsInPolygon(candidate, source))) {\r\n                            cb(source, candidate);\r\n                        }\r\n                    } else {\r\n                        cb(source, candidate);\r\n                    }\r\n                } else if (dcb) {\r\n                    dcb(source, candidate);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private pointsInPolygon(source: Object2D, candidate: Object2D): boolean {\r\n        let vert1 = source.vertices.length > candidate.vertices.length ? source.vertices : candidate.vertices;\r\n        let vert2 = source.vertices.length <= candidate.vertices.length ? source.vertices : candidate.vertices;\r\n\r\n        for (let i = 0, l = vert2.length; i < l; i++) {\r\n            if (this.pointInPoly(vert1, vert2[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // credit: Lascha Lagidse http://alienryderflex.com/polygon/\r\n    private pointInPoly(v: Point[], t: Point) {\r\n        let polyCorners = v.length - 1;\r\n        let i, j = polyCorners - 1;\r\n        let polyX = v.map(p => p.x);\r\n        let polyY = v.map(p => p.y);\r\n        let x = t.x;\r\n        let y = t.y;\r\n        let oddNodes = 0;\r\n  \r\n        for (i=0; i<polyCorners; i++) {\r\n            if ((polyY[i]< y && polyY[j]>=y\r\n                ||   polyY[j]< y && polyY[i]>=y)\r\n                &&  (polyX[i]<=x || polyX[j]<=x)) {\r\n                oddNodes^=(polyX[i] + (y-polyY[i]) / (polyY[j] - polyY[i]) * (polyX[j]-polyX[i]) < x as any); \r\n            }\r\n            j=i; \r\n        }\r\n\r\n        return oddNodes; \r\n    }\r\n}\r\n\r\n","import { EventSource } from \"./events\";\r\n\r\nexport class SlowMoTimer extends EventSource {\r\n\r\n    constructor(private time: number, private factor: number) {\r\n        super();\r\n    }\r\n\r\n    public adjust(dt: number): number {\r\n        const result = dt / this.factor;\r\n        this.time -= result;\r\n\r\n        if (this.time <= 0) {\r\n            this.trigger('expired');\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","\r\n// https://github.com/mapbox/lineclip\r\n\r\n// intersect a segment against one of the 4 lines that make up the bbox\r\n\r\nfunction intersect(a, b, edge, bbox) {\r\n    return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : // top\r\n           edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : // bottom\r\n           edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : // right\r\n           edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : // left\r\n           null;\r\n}\r\n\r\n// bit code reflects the point position relative to the bbox:\r\n\r\n//         left  mid  right\r\n//    top  1001  1000  1010\r\n//    mid  0001  0000  0010\r\n// bottom  0101  0100  0110\r\n\r\nfunction bitCode(p, bbox) {\r\n    var code = 0;\r\n\r\n    if (p[0] < bbox[0]) code |= 1; // left\r\n    else if (p[0] > bbox[2]) code |= 2; // right\r\n\r\n    if (p[1] < bbox[1]) code |= 4; // bottom\r\n    else if (p[1] > bbox[3]) code |= 8; // top\r\n\r\n    return code;\r\n}\r\n\r\n// Cohen-Sutherland line clipping algorithm, adapted to efficiently\r\n// handle polylines rather than just segments\r\n\r\nexport function lineclip(points, bbox, result) {\r\n\r\n    var len = points.length,\r\n        codeA = bitCode(points[0], bbox),\r\n        part = [],\r\n        i, a, b, codeB, lastCode;\r\n\r\n    if (!result) result = [];\r\n\r\n    for (i = 1; i < len; i++) {\r\n        a = points[i - 1];\r\n        b = points[i];\r\n        codeB = lastCode = bitCode(b, bbox);\r\n\r\n        while (true) {\r\n\r\n            if (!(codeA | codeB)) { // accept\r\n                part.push(a);\r\n\r\n                if (codeB !== lastCode) { // segment went outside\r\n                    part.push(b);\r\n\r\n                    if (i < len - 1) { // start a new line\r\n                        result.push(part);\r\n                        part = [];\r\n                    }\r\n                } else if (i === len - 1) {\r\n                    part.push(b);\r\n                }\r\n                break;\r\n\r\n            } else if (codeA & codeB) { // trivial reject\r\n                break;\r\n\r\n            } else if (codeA) { // a outside, intersect with clip edge\r\n                a = intersect(a, b, codeA, bbox);\r\n                codeA = bitCode(a, bbox);\r\n\r\n            } else { // b outside\r\n                b = intersect(a, b, codeB, bbox);\r\n                codeB = bitCode(b, bbox);\r\n            }\r\n        }\r\n\r\n        codeA = lastCode;\r\n    }\r\n\r\n    if (part.length) result.push(part);\r\n\r\n    return result;\r\n}\r\n\r\n// Sutherland-Hodgeman polygon clipping algorithm\r\nexport function polygonclip(points, bbox) {\r\n\r\n    var result, edge, prev, prevInside, i, p, inside;\r\n\r\n    // clip against each side of the clip rectangle\r\n    for (edge = 1; edge <= 8; edge *= 2) {\r\n        result = [];\r\n        prev = points[points.length - 1];\r\n        prevInside = !(bitCode(prev, bbox) & edge);\r\n\r\n        for (i = 0; i < points.length; i++) {\r\n            p = points[i];\r\n            inside = !(bitCode(p, bbox) & edge);\r\n\r\n            // if segment goes through the clip window, add an intersection\r\n            if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\r\n\r\n            if (inside) result.push(p); // add a point if it's inside\r\n\r\n            prev = p;\r\n            prevInside = inside;\r\n        }\r\n\r\n        points = result;\r\n\r\n        if (!points.length) break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { Draw } from './draw';\r\n\r\nexport class Screen implements Rect {\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    x: number = 0;\r\n    y: number = 0;\r\n    width: number;\r\n    height: number;\r\n    draw: Draw;\r\n    width2: number;\r\n    height2: number;\r\n    \r\n    private _fontXL: number;\r\n    private _fontL: number;\r\n    private _fontM: number;\r\n    private _fontS: number;\r\n    private _objectScale: number;\r\n    private _shipRect: Rect;\r\n    private _pointSize: number;\r\n\r\n    constructor() {\r\n        this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.draw = new Draw(this.ctx);\r\n        this.init();\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.init();\r\n        });\r\n    }\r\n\r\n    init() {\r\n        this.canvas.width = document.body.clientWidth; \r\n        this.canvas.height = document.body.clientHeight; \r\n        this.width = this.canvas.width;\r\n        this.height = this.canvas.height;\r\n        this.width2 = this.width / 2;\r\n        this.height2 = this.height / 2;\r\n\r\n        if (this.width >= 1280) {\r\n            this._fontXL = 60;\r\n            this._fontL = 30;\r\n            this._fontM = 24; \r\n            this._fontS = 12;\r\n            this._objectScale = 1;\r\n        } else if (this.width >= 800) {\r\n            this._fontXL = 48;\r\n            this._fontL = 24;\r\n            this._fontM = 18; \r\n            this._fontS = 10;\r\n            this._objectScale = .75;\r\n        } else {\r\n            this._fontXL = 36;\r\n            this._fontL = 12;\r\n            this._fontM = 10; \r\n            this._fontS = 6;\r\n            this._objectScale = .5;\r\n        }\r\n\r\n        this._pointSize = 4 * this._objectScale;\r\n\r\n        const offRect = (120 * this._objectScale);\r\n\r\n        this._shipRect = {\r\n            x: this.width2 - offRect,\r\n            y: this.height2 - offRect,\r\n            width: offRect * 2,\r\n            height: offRect * 2\r\n        }\r\n    }\r\n\r\n    get font() {\r\n        let self = this;\r\n        return {\r\n            get xlarge() {\r\n                return self._fontXL;\r\n            },\r\n            get large() {\r\n                return self._fontL;\r\n            },\r\n            get medium() {\r\n                return self._fontM;\r\n            },\r\n            get small() {\r\n                return self._fontS;\r\n            }\r\n        }\r\n    }\r\n\r\n    get objectScale() {\r\n        return this._objectScale;\r\n    }\r\n    \r\n    get pointSize() {\r\n        return this._pointSize;\r\n    }\r\n    \r\n    get shipRect() {\r\n        return this._shipRect;\r\n    }\r\n\r\n    preShake() {\r\n        this.ctx.save();\r\n        var dx = Math.random() * 10;\r\n        var dy = Math.random() * 10;\r\n        this.ctx.translate(dx, dy);  \r\n    }\r\n\r\n    postShake() {\r\n        this.ctx.restore();\r\n    }\r\n}\r\n\r\nexport default new Screen();\r\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import screen from './screen';\r\nimport { Highscores } from './highscores';\r\n\r\nexport class HighScoreMode implements IGameState {\r\n\r\n    blink: number = 0;\r\n    showPushStart: boolean = true;\r\n    highscore: number;\r\n\r\n    constructor(private score) {\r\n        this.highscore = Highscores.top.score;\r\n    }\r\n\r\n    update(dt) {\r\n        this.blink += dt;\r\n        \r\n        if (this.blink >= .4) {\r\n            this.blink = 0;\r\n            this.showPushStart = !this.showPushStart;\r\n        }\r\n    }\r\n\r\n    render(delta: number) {\r\n        this.drawBackground();\r\n        this.drawPushStart();\r\n        this.drawHighScores();\r\n    }\r\n\r\n    private drawBackground() {\r\n        screen.draw.background();\r\n        screen.draw.scorePlayer1(this.score);\r\n        screen.draw.oneCoinOnePlay();\r\n        screen.draw.highscore(this.highscore);\r\n        screen.draw.copyright();\r\n    }\r\n\r\n    private drawHighScores() {\r\n        const screenX = screen.width / 2;\r\n        const startY = Math.ceil(screen.height / 4.5) + (screen.font.xlarge + screen.font.small);\r\n        const spacing = screen.font.medium + screen.font.small;\r\n        \r\n        screen.draw.text2('high scores', screen.font.large, (width) => {\r\n            return {\r\n                x: screenX - (width / 2),\r\n                y: screen.height / 4.5\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < Highscores.scores.length; i++) {\r\n            const y = startY + (i * spacing);\r\n            const text = `${this.pad(i + 1, ' ', 2)}.${this.pad(Highscores.scores[i].score, ' ', 6)} ${Highscores.scores[i].initials}`;\r\n\r\n            screen.draw.text2(text, screen.font.large, (width) => {\r\n                return {\r\n                    x: screenX - (width / 2),\r\n                    y: y\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private drawPushStart() {\r\n        if (this.showPushStart) {\r\n            screen.draw.pushStart();\r\n        }\r\n    }\r\n    \r\n    private pad(text: any, char: string, count: number) {\r\n        text = text.toString();\r\n        while (text.length < count) {\r\n            text = char + text;\r\n        }\r\n        return text;\r\n    }\r\n\r\n}","const timestamp = () => {\r\n    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\r\n}\r\n\r\nlet now: number;\r\nlet delta = 0;\r\nlet last = timestamp();\r\n\r\nconst DT = 1/60;\r\nconst ONE_SECOND = 1000;\r\n\r\nconst init = (state: IGameState) => {\r\n\r\n    const frame = () => {\r\n        now = timestamp();\r\n        delta += Math.min(1, (now - last) / ONE_SECOND);\r\n        \r\n        while(delta > DT) {\r\n            state.update(DT);\r\n            delta -= DT;\r\n        }\r\n\r\n        state.render(delta);\r\n\r\n        last = now;\r\n        \r\n        requestAnimationFrame(frame);        \r\n    }\r\n\r\n    frame();\r\n}\r\n\r\nexport const loop = (state: IGameState) => {\r\n    init(state);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { thumpLo, thumpHi } from './sounds';\r\n\r\nconst MIN = .15;\r\nconst MAX_VOL = 1;\r\n\r\nexport class Thumper {\r\n    thumpBeatTimer: number;\r\n    thumpBeat: number;\r\n    thumpTimer: number;\r\n    thumpTime: number;\r\n    lo: boolean = true;\r\n    max: boolean;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.thumpBeatTimer = 0;\r\n        this.thumpBeat = 1;\r\n        this.thumpTimer = 0;\r\n        this.thumpTime = 10;\r\n        this.max = false;\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.thumpTimer += dt;\r\n        this.thumpBeatTimer += dt;\r\n        this.thumpBeat -= .0002;\r\n\r\n        if (this.thumpBeat <= MIN) {\r\n            this.thumpBeat = MIN;\r\n        }\r\n\r\n        if (this.thumpBeatTimer >= this.thumpBeat) {\r\n            if (this.lo) {\r\n                thumpLo.play();\r\n            } else {\r\n                thumpHi.play();\r\n            }\r\n\r\n            this.lo = !this.lo;\r\n            this.thumpBeatTimer = 0;\r\n        }\r\n\r\n    }    \r\n}\r\n","import { Sound } from './sounds';\r\nimport { EventSource } from './events';\r\nimport { Object2D } from './object2d';\r\nimport { Collisions } from './collisions';\r\nimport screen from './screen';\r\nimport { World } from './world';\r\nimport { Thumper } from './thump';\r\nimport Global from './global';\r\n\r\nexport class GameMode extends EventSource implements IGameState {\r\n\r\n    bounds: Object2D[] = [];\r\n    thumper: Thumper;\r\n\r\n    private lastCollisions: Collisions;\r\n\r\n    constructor(private world: World) {\r\n        super();\r\n    }\r\n\r\n    init() {\r\n        Sound.on();\r\n        this.world.addShip(screen.width2, screen.height2);\r\n        this.world.startLevel();\r\n        this.thumper = new Thumper();\r\n    }\r\n\r\n    update(dt: number) {\r\n        \r\n        this.world.levelTimer += dt;\r\n        \r\n        if (this.thumper && this.world.ship) {\r\n            this.thumper.update(dt);\r\n        }\r\n\r\n        if (this.world.gameOver) {\r\n            this.world.gameOverTimer += dt;\r\n\r\n            if (this.world.gameOverTimer >= 5) {\r\n                this.trigger('done', this.world);\r\n            }\r\n        }\r\n\r\n        if (!this.world.started) {\r\n            if (this.world.levelTimer >= 2) {\r\n                this.init();\r\n                this.world.started = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // collisions\r\n        this.lastCollisions = this.checkCollisions(dt);\r\n\r\n        // alien?\r\n        this.world.updateAlienTimer(dt);\r\n\r\n        if (!this.world.gameOver) {\r\n            \r\n            // place ship after crash\r\n            if (this.world.shouldTryToPlaceShip()) { \r\n                this.world.tryPlaceShip(dt);\r\n            }\r\n            \r\n            // check for next level\r\n            if (this.world.shouldCheckForNextLevel()) {  \r\n                this.world.startLevel();\r\n                this.thumper.reset();\r\n            }\r\n\r\n        }\r\n\r\n        // game over\r\n        if (!this.world.lives) {  \r\n            this.world.gameOver = true;\r\n        }\r\n\r\n        // update all objects\r\n        this.world.update(dt);\r\n    }\r\n\r\n    render(delta: number) {\r\n        if (Global.paused) {\r\n            return;\r\n        }\r\n        \r\n        this.renderStatic();\r\n\r\n        this.world.render(delta);\r\n    }\r\n\r\n    private renderStatic() {\r\n        screen.draw.background();\r\n        screen.draw.copyright();\r\n        screen.draw.scorePlayer1(this.world.score);\r\n        screen.draw.highscore(this.world.highscore);\r\n        screen.draw.drawExtraLives(this.world.lives);\r\n\r\n        // remaining shields\r\n        if (this.world.ship) {\r\n            screen.draw.vectorline(40, 80, 140, 80, `rgba(255,255,255,.4)`);\r\n            screen.draw.vectorline(40, 80, 40 + this.world.ship.shield * 100, 80, `rgba(255,255,255,.6)`);\r\n        }\r\n\r\n        // player 1\r\n        if (!this.world.started) {\r\n            screen.draw.player1();\r\n        }\r\n\r\n        if (this.world.gameOver) {\r\n            screen.draw.gameOver();\r\n        }\r\n\r\n        // debug stuff\r\n        if (Global.debug) {\r\n            this.renderDebug();\r\n        }\r\n\r\n        if (Global.god) {\r\n            screen.draw.text2('god', screen.font.small, (width) => {\r\n                return { x: screen.width - width - 10, y: screen.height - 80 };\r\n            });\r\n        }\r\n    }\r\n\r\n    private renderDebug() {\r\n        \r\n        screen.draw.text2('debug mode', screen.font.small, (width) => {\r\n            return { x: screen.width - width - 10, y: screen.height - 40 };\r\n        });\r\n\r\n        if (this.bounds) {\r\n            this.bounds.forEach(r => {\r\n                screen.draw.bounds(r, '#fc058d');\r\n            });\r\n        }\r\n\r\n        if (!this.world.ship && this.world.lives) {\r\n            let rect: Rect = screen.shipRect;\r\n            screen.draw.bounds(rect, '#00ff00');\r\n        }\r\n\r\n        if (this.world.ship) {\r\n            screen.draw.text(this.world.ship.angle.toString(), this.world.ship.origin.x + 20, this.world.ship.origin.y + 20, 10);\r\n            screen.draw.text(this.world.ship.velocity.x.toString(), this.world.ship.origin.x + 20, this.world.ship.origin.y + 40, 10);\r\n            screen.draw.text(this.world.ship.velocity.y.toString(), this.world.ship.origin.x + 20, this.world.ship.origin.y + 60, 10);\r\n        }\r\n\r\n        const date = new Date(null);\r\n        date.setSeconds(this.world.levelTimer);\r\n\r\n        screen.draw.text2(date.toISOString().substr(11, 8), screen.font.small, (width) => {\r\n            return { x: 10, y: screen.height - 40 };\r\n        });\r\n\r\n        if (this.lastCollisions) {\r\n            screen.draw.quadtree(this.lastCollisions.tree);\r\n        }\r\n    \r\n    }\r\n\r\n    private checkCollisions(dt: number) {\r\n        const { ship, rocks, shipBullets, alien, alienBullets, shockwaves } = this.world;\r\n        \r\n        if (!this.world.shouldCheckCollisions()) {\r\n            return;\r\n        }\r\n\r\n        this.bounds.length = 0;\r\n\r\n        const collisions = new Collisions();\r\n\r\n        collisions.bulletCheck(shipBullets, rocks, (bullet, rock) => {\r\n            this.world.shake();\r\n            this.world.addScore(rock);\r\n            this.world.rockDestroyed(rock);\r\n            bullet.destroy();\r\n        }, (bullet1, bullet2, rock) => {\r\n            if (Global.debug) {\r\n                this.bounds.push(rock);\r\n            }\r\n        });\r\n\r\n        collisions.bulletCheck(shipBullets, [alien], (bullet, alien) => {\r\n            this.world.shake();\r\n            this.world.addScore(alien)\r\n            this.world.alienDestroyed();\r\n            bullet.destroy();\r\n        }, (bullet1, bullet2, alien) => {\r\n            if (Global.debug) {\r\n                this.bounds.push(alien);\r\n            }\r\n        });\r\n\r\n        // shockwaves can break rocks\r\n        let cowboys = []; \r\n        shockwaves.filter(x => x.rocks.length).forEach(y => cowboys.push(...y.rocks));\r\n        \r\n        if (cowboys.length) {\r\n            let indians = this.world.rocks.filter(x => cowboys.indexOf(x) < 0);\r\n            collisions.check(cowboys, indians, false, (cowboy, indian) => {\r\n                this.world.addScore(cowboy);\r\n                this.world.addScore(indian);\r\n                this.world.rockDestroyed(cowboy);\r\n                this.world.rockDestroyed(indian);\r\n            });\r\n        }\r\n\r\n        if (!Global.god) {\r\n            collisions.check([ship], rocks, true, (ship, rock) => {\r\n                this.world.shake();\r\n                this.world.addScore(rock);\r\n                this.world.rockDestroyed(rock);\r\n\r\n                ship.shield -= .25;\r\n                \r\n                if (ship.shield <= 0) {\r\n                    this.world.shipDestroyed();\r\n                }\r\n                \r\n            }, (ship, rock) => {\r\n                if (Global.debug) {\r\n                    this.bounds.push(rock);\r\n                }\r\n            });\r\n\r\n            collisions.check([ship], [alien], true, (ship, alien) => {\r\n                this.world.shake();\r\n                this.world.addScore(alien);\r\n                this.world.alienDestroyed();\r\n                \r\n                ship.shield -= .5;\r\n\r\n                if (ship.shield <= 0) {\r\n                    this.world.shipDestroyed();\r\n                }\r\n\r\n            }, (ship, alien) => {\r\n                if (Global.debug) {\r\n                    this.bounds.push(alien);\r\n                }\r\n            });\r\n\r\n            collisions.check(alienBullets, [ship], true, (bullet, ship) => {\r\n                this.world.shake();\r\n                ship.shield -= 1;\r\n\r\n                if (ship.shield <= 0) {\r\n                    this.world.shipDestroyed();\r\n                }\r\n\r\n                bullet.destroy();\r\n            }, (bullet, ship) => {\r\n                if (Global.debug) {\r\n                    this.bounds.push(ship);\r\n                }\r\n            });\r\n        }\r\n\r\n        collisions.check([alien], rocks, false, (alien, rock) => {\r\n            this.world.shake();\r\n            this.world.alienDestroyed();\r\n            this.world.rockDestroyed(rock);\r\n        }, (alien, rock) => {\r\n            if (Global.debug) {\r\n                this.bounds.push(rock);\r\n            }\r\n        });\r\n        \r\n        collisions.check(alienBullets, rocks, false, (bullet, rock) => {\r\n            this.world.shake();\r\n            this.world.rockDestroyed(rock);\r\n        }, (bullet, rock) => {\r\n            if (Global.debug) {\r\n                this.bounds.push(rock);\r\n            }\r\n        });\r\n\r\n        return collisions;\r\n    }\r\n\r\n\r\n}","import { World } from './world';\r\nimport { EventSource } from './events';\r\nimport { HighScoreMode } from './highScoreMode';\r\nimport { DemoMode } from './demoMode';\r\nimport { Highscores } from './highscores';\r\nimport { Sound } from './sounds';\r\nimport { Key } from './keys';\r\n\r\nconst ATTRACT_TIME = 15;\r\n\r\n// combines DemoMode and HighscoreMode to attract people to part with their quarters\r\nexport class AttractMode extends EventSource implements IGameState {\r\n    \r\n    private demoTimer = 0;\r\n    private currentMode: IGameState;\r\n    private modes: IGameState[];\r\n    private index: number = 0;\r\n\r\n    constructor(world: World, lastScore: number) {\r\n        super();\r\n\r\n        this.modes = [\r\n            new HighScoreMode(lastScore),\r\n            new DemoMode(world || new World(Highscores.top.score))\r\n        ];\r\n\r\n        this.currentMode = this.modes[0];\r\n\r\n        Sound.stop();\r\n        Sound.off();\r\n    }\r\n\r\n    update(step: number) {\r\n        this.currentMode.update(step);\r\n        if (Key.isAnyPressed()) {\r\n            this.trigger('done');\r\n        } else {\r\n            this.updateAttractTimer(step);\r\n        }\r\n    }\r\n    \r\n    render(dt?: number) {\r\n        this.currentMode.render(dt);\r\n    }\r\n\r\n    updateAttractTimer(step: number) {\r\n        this.demoTimer += step;\r\n            \r\n        if (this.demoTimer >= ATTRACT_TIME) {\r\n            this.demoTimer = 0;\r\n            this.index = 1 - this.index;\r\n            this.currentMode = this.modes[this.index];\r\n        }\r\n    }\r\n}","// move to local storage at some point\r\n\r\nconst defaults = [\r\n    { score: 20140, initials: 'J H'},\r\n    { score: 20050, initials: 'P A'},\r\n    { score: 19930, initials: '  M'},\r\n    { score: 19870, initials: 'G I'},\r\n    { score: 19840, initials: 'A L'},\r\n    { score: 19790, initials: 'M T'},\r\n    { score: 19700, initials: 'E O'},\r\n    { score: 19660, initials: 'S N'},\r\n    { score:   190, initials: '   '},\r\n    { score:    70, initials: '   '},\r\n];\r\n\r\nconst SCORE_KEY = 'jph_asteroids_hs';\r\n\r\nclass Highscores {\r\n\r\n    scores: { score: number, initials: string}[] = [];\r\n\r\n    constructor() {\r\n        const str = window.localStorage.getItem(SCORE_KEY);\r\n        this.scores = str ? JSON.parse(str) || [] : defaults;\r\n    }\r\n\r\n    get top() {\r\n        return this.scores[0];\r\n    }\r\n\r\n    qualifies(score: number) {\r\n        const less = highscores.scores.filter(x => x.score < score);\r\n        return !!less.length;\r\n    }\r\n\r\n    save(score: number, initials: string) {\r\n        if (this.qualifies(score)) {\r\n            this.scores.push({score: score, initials: initials});\r\n            this.scores = this.scores.sort((a, b) => a.score > b.score ? -1 : 1).slice(0, 10);\r\n            window.localStorage.setItem(SCORE_KEY, JSON.stringify(this.scores));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst highscores = new Highscores()\r\n\r\nexport { highscores as Highscores }\r\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","import * as Hammer from 'hammerjs';\r\n\r\ntype KeyPressMap = { [key: number]: boolean };\r\n\r\nexport const Keys = {\r\n    HYPERSPACE : 32,\r\n    ROTATE_LEFT : 37,\r\n    ROTATE_LEFT_A : 65,\r\n    ROTATE_RIGHT : 39,\r\n    ROTATE_RIGHT_D : 68,\r\n    THRUST : 38,\r\n    THRUST_W : 87,\r\n    FIRE : 17,\r\n    DEBUG : 90,\r\n    PAUSE : 80,\r\n    GOD : 71,\r\n    MONITOR_BURN : 66,\r\n}\r\n\r\nexport class _Key {\r\n\r\n    keys: KeyPressMap = {}; \r\n    prev: KeyPressMap = {};\r\n    touched: boolean = false;\r\n    mc: any;\r\n\r\n    constructor() {\r\n        window.onkeydown = (e) => {\r\n            this.keys[e.keyCode] = true;\r\n        }\r\n\r\n        window.onkeyup = (e) => {\r\n            this.keys[e.keyCode] = false;\r\n        }\r\n\r\n        const stage = document.getElementById('game');\r\n        this.mc = new Hammer.Manager(stage);\r\n        \r\n        const pan = new Hammer.Pan();\r\n        const tap = new Hammer.Tap();\r\n        const pinch = new Hammer.Pinch({\r\n            enable: true\r\n        });\r\n\r\n        this.mc.add(pan);\r\n        this.mc.add(tap, {\r\n            interval: 50\r\n        });\r\n        this.mc.add(pinch);\r\n\r\n        this.mc.on('panup', (e) => {\r\n            this.thrust(true);\r\n        });\r\n\r\n        this.mc.on('panleft', (e) => {\r\n            this.rotateLeft(true);\r\n        });\r\n\r\n        this.mc.on('panright', (e) => {\r\n            this.rotateRight(true);\r\n        });\r\n\r\n        this.mc.on('panend', (e) => {\r\n            this.thrust(false);\r\n            this.rotateLeft(false);\r\n            this.rotateRight(false);\r\n        });\r\n\r\n        this.mc.on('tap', (e) => {\r\n            this.fire(true);\r\n            this.touched = true;\r\n        });\r\n\r\n        this.mc.on('pinchout', (e) => {\r\n            this.hyperspace(true);\r\n        });\r\n\r\n        this.mc.on('pinchend', (e) => {\r\n            this.hyperspace(false);\r\n        });\r\n\r\n    }\r\n\r\n    update() {\r\n        Object.keys(this.keys).forEach(key => {\r\n            this.prev[key] = this.keys[key];\r\n        });\r\n\r\n        if (this.touched) {\r\n            this.fire(false);\r\n        }\r\n\r\n        this.touched = !this.touched;\r\n    }\r\n\r\n    isPressed(key: number) {\r\n        return this.prev[key] === false && this.keys[key] === true;\r\n    }\r\n\r\n    wasPressed(key: number) {\r\n        return this.prev[key] && !this.keys[key];\r\n    }\r\n\r\n    isDown(key: number) {\r\n        return this.keys[key];\r\n    }\r\n\r\n    isAnyPressed() {\r\n        return !!Object.values(this.keys).filter(pressed => pressed).length;\r\n    }\r\n\r\n    isRotateLeft() {\r\n        return this.keys[Keys.ROTATE_LEFT] || this.keys[Keys.ROTATE_LEFT_A];\r\n    }\r\n\r\n    isRotateRight() {\r\n        return this.keys[Keys.ROTATE_RIGHT] || this.keys[Keys.ROTATE_RIGHT_D];\r\n    }\r\n\r\n    isThrust() {\r\n        return this.keys[Keys.THRUST] || this.keys[Keys.THRUST_W];\r\n    }\r\n\r\n    isFire() {\r\n        return this.keys[Keys.FIRE];\r\n    }\r\n\r\n    isHyperspace() {\r\n        return this.keys[Keys.HYPERSPACE];\r\n    }\r\n\r\n    wasRotateLeft() {\r\n        return this.isPressed(Keys.ROTATE_LEFT) || this.isPressed(Keys.ROTATE_LEFT_A);\r\n    }\r\n\r\n    wasRotateRight() {\r\n        return this.isPressed(Keys.ROTATE_RIGHT) || this.isPressed(Keys.ROTATE_RIGHT_D);\r\n    }\r\n\r\n    wasHyperspace() {\r\n        return this.isPressed(Keys.HYPERSPACE);\r\n    }\r\n\r\n    private rotateLeft = (active: boolean) => {\r\n        this.keys[Keys.ROTATE_LEFT] = active;\r\n        this.keys[Keys.ROTATE_LEFT_A] = active;\r\n    }\r\n\r\n    private rotateRight = (active: boolean) => {\r\n        this.keys[Keys.ROTATE_RIGHT] = active;\r\n        this.keys[Keys.ROTATE_RIGHT_D] = active;\r\n    }\r\n\r\n    private thrust = (active: boolean) => {\r\n        this.keys[Keys.THRUST] = active;\r\n    }\r\n\r\n    private fire = (active: boolean) => {\r\n        this.keys[Keys.FIRE] = active;\r\n    }\r\n\r\n    private hyperspace = (active: boolean) => {\r\n        this.keys[Keys.HYPERSPACE] = active;\r\n    }\r\n}\r\n\r\nexport const Key = new _Key();\r\n\r\n","import screen from './screen';\r\nimport { EventSource } from './events';\r\nimport { COS, SIN } from './lut';\r\nimport { Vector } from './vector';\r\n\r\nexport abstract class Object2D extends EventSource implements Rect, IGameState {\r\n\r\n    angle: number = 360; \r\n    velocity: Vector = new Vector(0, 0);\r\n    origin: Vector;\r\n    \r\n    private _xmin: number = 0;\r\n    private _xmax: number = 0;\r\n    private _ymin: number = 0;\r\n    private _ymax: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    private _points: Point[];\r\n    protected _score: number = 0;\r\n\r\n    abstract update(dt?: number) : void;\r\n    abstract render(dt?: number) : void;\r\n    \r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    set score(value: number) {\r\n        this._score = value;\r\n    }\r\n\r\n    constructor(x: number, y: number) {\r\n        super();\r\n        this.origin = new Vector(x, y);\r\n    }\r\n\r\n    set points(points: Point[]) {\r\n        points.forEach(p => {\r\n            p.x *= screen.objectScale;\r\n            p.y *= screen.objectScale;\r\n        })\r\n        this._points = points;\r\n        this.calcBounds();\r\n    }\r\n\r\n    get points(): Point[] {\r\n        return this._points;\r\n    }\r\n\r\n    private calcBounds() {\r\n        this._points.forEach(p => {\r\n            if (p.x < this._xmin) this._xmin = p.x;\r\n            if (p.x > this._xmax) this._xmax = p.x;\r\n            if (p.y < this._ymin) this._ymin = p.y;\r\n            if (p.y > this._ymax) this._ymax = p.y;\r\n        });\r\n        this._width = this._xmax - this._xmin\r\n        this._height = this._ymax - this._ymin; \r\n    }\r\n\r\n    rotate(angle: number) {\r\n        this.angle += angle;\r\n        \r\n        if (this.angle < 1) {\r\n            this.angle += 360;\r\n        }\r\n\r\n        if (this.angle > 360) {\r\n            this.angle -= 360;\r\n        }\r\n\r\n        const c = COS[angle]\r\n        const s = SIN[angle];\r\n\r\n        this.points.forEach(p => {\r\n            const newX = (c * p.x) - (s * p.y);\r\n            const newY = (s * p.x) + (c * p.y);\r\n            p.x = newX;\r\n            p.y = newY;\r\n        });\r\n\r\n        this.calcBounds();\r\n    }\r\n\r\n    move(dt?: number) {\r\n        dt = dt ? dt : 1;\r\n\r\n        this.origin.x += this.velocity.x * dt;\r\n        this.origin.y += this.velocity.y * dt;\r\n        \r\n        if (this.origin.x > screen.width) {\r\n            this.origin.x -= screen.width;\r\n        }\r\n\r\n        if (this.origin.x < 0) {\r\n            this.origin.x += screen.width;\r\n        }\r\n\r\n        if (this.origin.y > screen.height) {\r\n            this.origin.y -= screen.height;\r\n        }\r\n\r\n        if (this.origin.y < 0) {\r\n            this.origin.y += screen.height;\r\n        }\r\n    }\r\n    \r\n    scale(factor: number) {\r\n        this.points.forEach(point => {\r\n            point.x *= factor;\r\n            point.y *= factor;\r\n        });\r\n        this.calcBounds();\r\n    }\r\n\r\n    draw(closed: boolean = true, color = 'rgba(255,255,255,.8)') {\r\n        screen.draw.vectorShape(this.points, this.origin.x, this.origin.y, color, closed);\r\n    }\r\n\r\n    get x(): number {\r\n        return this.origin.x + this._xmin;\r\n    }\r\n\r\n    set x(x: number) {\r\n        this.origin.x = x; \r\n    }\r\n\r\n    get y(): number {\r\n        return this.origin.y + this._ymin;\r\n    }\r\n\r\n    set y(y: number) {\r\n        this.origin.y = y;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n    \r\n    get vertices(): Point[] {\r\n        return this.points.map(p => {\r\n            return {\r\n                x: this.origin.x + p.x,\r\n                y: this.origin.y + p.y\r\n            }\r\n        });\r\n    }\r\n\r\n    collided(rect2: Rect) {\r\n        if (rect2 && this.x < rect2.x + rect2.width &&\r\n            this.x + this.width > rect2.x &&\r\n            this.y < rect2.y + rect2.height &&\r\n            this.height + this.y > rect2.y) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    destroy() {\r\n        for(let event in this.handlers) {\r\n            this.handlers[event] = null;\r\n        }\r\n        this.handlers = {};\r\n    }\r\n}","import screen from './screen';\r\nimport { Sound } from './sounds';\r\nimport { Key } from './keys';\r\nimport { Highscores } from './highscores';\r\nimport { EventSource } from './events';\r\n\r\nconst letters = '_abcdefghijklmnopqrstuvwxyz';\r\n\r\nexport class InitialsMode extends EventSource implements IGameState {\r\n    index: number = 1;\r\n    position: number;\r\n    score: number;\r\n    initials: string[];\r\n    \r\n    constructor(score: number) {\r\n        super();\r\n        this.score = score;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.position = 0;\r\n        this.index = 1;\r\n        this.initials = ['a', '_', '_'];\r\n\r\n        Sound.stop();\r\n        Sound.off();\r\n    }\r\n\r\n    update(dt) {\r\n        if (Key.wasRotateLeft()) {\r\n            this.index--;\r\n            if (this.index < 0) {\r\n                this.index = letters.length - 1;\r\n            }\r\n            this.initials[this.position] = letters[this.index];\r\n        }\r\n\r\n        if (Key.wasRotateRight()) {\r\n            this.index++;\r\n            if (this.index > letters.length - 1) {\r\n                this.index = 0;\r\n            }\r\n            this.initials[this.position] = letters[this.index];\r\n        }\r\n\r\n        if (Key.wasHyperspace()) {\r\n            this.position++;\r\n            \r\n            if (this.position >= 3) {\r\n                Highscores.save(this.score, this.initials.join('').replace('_',' '));\r\n                this.init();\r\n                this.trigger('done');\r\n            }\r\n\r\n            this.index = 1;\r\n            this.initials[this.position] = letters[this.index];\r\n        }\r\n    }\r\n\r\n    render(delta: number) {\r\n        let offset: number = screen.height / 4.5;\r\n        const text = (t => screen.draw.text(t, 50, offset += screen.font.large + 5, screen.font.large));\r\n        \r\n        screen.draw.background();\r\n        screen.draw.highscore(Highscores.top.score);\r\n        screen.draw.scorePlayer1(this.score);\r\n        screen.draw.copyright();\r\n\r\n        text('your score is one of the ten best');\r\n        text('please enter your initials');\r\n        text('push rotate to select letter');\r\n        text('push hyperspace when letter is correct');\r\n\r\n        screen.draw.text3(this.initials.join(''), screen.font.xlarge, (width) => {\r\n            return { x: screen.width2 - (width / 2), y: screen.height / 2 + screen.font.xlarge };\r\n        });\r\n    }\r\n}","export function random(start: number, end: number): number {\r\n     return Math.floor(Math.random() * (end - start + 1)) + start;\r\n}\r\n\r\nexport function randomFloat(start: number, end: number): number {\r\n    return Math.random() * (end - start) + start;\r\n}","import screen from './screen';\r\nimport { white } from './draw';\r\nimport { Object2D } from './object2d';\r\n\r\nexport class ScoreMarker extends Object2D { \r\n\r\n    life: number = 1;   // in seconds\r\n    \r\n    constructor(obj: Object2D, private text: string) {\r\n        super(obj.origin.x, obj.origin.y);\r\n        this.velocity = obj.velocity;\r\n    }\r\n\r\n    render() {\r\n        screen.draw.text(this.text, this.origin.x, this.origin.y, this.life * 50, white(this.life));   \r\n    }\r\n\r\n    update(dt: number) {\r\n        this.move(dt);\r\n\r\n        this.life -= dt;\r\n\r\n        if (this.life <= 0) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.life = 0;\r\n        this.trigger('expired');\r\n    }\r\n}","export class EventSource {\r\n    \r\n    protected handlers: { [event: string]: ((...args: any[])=> void)[]} = {};\r\n\r\n    on(event: string, handler: (...args: any[]) => void) {\r\n        if (!this.handlers[event]) {\r\n            this.handlers[event] = [];\r\n        }\r\n        this.handlers[event].push(handler); \r\n    }\r\n\r\n    off(event: string, handler: (...args: any[]) => void) {\r\n        this.handlers[event] = this.handlers[event].filter(x => x !== handler); \r\n    }\r\n\r\n    trigger(event: string, ...args: any[] ) {\r\n        const handlers = this.handlers[event] || [];\r\n        handlers.forEach(x => x(this, ...args));\r\n    }\r\n    \r\n}","import screen from './screen';\r\nimport { random } from './util';\r\nimport { Object2D } from './object2d';\r\nimport { Ship } from './ship';\r\nimport { Bullet } from './bullet';\r\nimport { Vector } from './vector';\r\n\r\nconst BIG_ALIEN_BULLET_SPEED: number = 600 * screen.objectScale;\r\nconst SMALL_ALIEN_BULLET_SPEED: number = 800 * screen.objectScale;\r\nconst BIG_ALIEN_SPEED: number = 225 * screen.objectScale;\r\nconst SMALL_ALIEN_SPEED: number = 250 * screen.objectScale;\r\n\r\n\r\nexport abstract class Alien extends Object2D {\r\n\r\n    moveTimer: number = 0;\r\n    moveTime: number = 1;\r\n    bulletTimer: number = 0;\r\n    bulletTime: number = .7;\r\n    \r\n    abstract fire(): void;\r\n    abstract destroy(): void;\r\n    \r\n    constructor(speed) {\r\n        super(0, 0);\r\n\r\n        this.velocity.y = 0;\r\n\r\n        this.origin.y = random(100, screen.height - 100);\r\n        \r\n        if (this.origin.y % 2 === 0) {\r\n            this.origin.x = 40;\r\n            this.velocity.x = speed;\r\n        } else {\r\n            this.origin.x = screen.width - 40;\r\n            this.velocity.x = -speed;\r\n        }\r\n\r\n        this.points = [\r\n            { x: .5, y: -2},\r\n            { x: 1, y: -1},\r\n            { x: 2.5, y: 0},\r\n            { x: 1, y: 1},\r\n            { x: -1, y: 1},\r\n            { x: -2.5, y: 0},\r\n            { x: -1, y: -1},\r\n            { x: -.5, y: -2}\r\n        ];\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.move(dt);\r\n        \r\n        if (this.origin.x >= screen.width - 5 || this.origin.x <= 5) {\r\n            this.trigger('expired');\r\n            return;\r\n        }\r\n\r\n        // direction changes\r\n        this.moveTimer += dt;\r\n        \r\n        if (this.moveTimer >= 1 && this.velocity.y !== 0) {\r\n            this.velocity.y = 0;\r\n            this.moveTimer = 0;\r\n        }\r\n\r\n        if (this.moveTimer >= this.moveTime) {\r\n            let move = random(1, 20) % 2 === 0;\r\n            \r\n            if (move) {\r\n                this.velocity.y = this.origin.x % 2 === 0 ? this.velocity.x : -this.velocity.x;   \r\n            }\r\n            \r\n            this.moveTimer = 0;\r\n        }\r\n\r\n        // firing \r\n        this.bulletTimer += dt;\r\n\r\n        if (this.bulletTimer >= this.bulletTime) {\r\n            this.fire();\r\n            this.bulletTimer = 0;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        this.draw();\r\n    }\r\n    \r\n    draw() {\r\n        super.draw();\r\n        screen.draw.vectorShape([this.points[1], this.points[6]], this.origin.x, this.origin.y);\r\n        screen.draw.vectorShape([this.points[2], this.points[5]], this.origin.x, this.origin.y);\r\n    }\r\n}\r\n\r\n// Mr. Bill\r\nexport class BigAlien extends Alien {\r\n\r\n    constructor() {\r\n        super(BIG_ALIEN_SPEED);\r\n        this.score = 200;\r\n        this.scale(7);\r\n    }\r\n\r\n    fire() {\r\n        const v = Vector.fromAngle(random(1, 360), BIG_ALIEN_BULLET_SPEED);\r\n        const bullet = new Bullet(this.origin, v);\r\n        this.trigger('fire', bullet);\r\n    }\r\n\r\n    destroy() {\r\n        this.trigger('expired');\r\n    }    \r\n}\r\n\r\n// Sluggo\r\nexport class SmallAlien extends Alien {\r\n\r\n    //score: number = 1000;\r\n    bulletTime: number = 1;\r\n\r\n    constructor(private ship: Ship) {\r\n        super(SMALL_ALIEN_SPEED);\r\n        this.score = 1000;\r\n        this.scale(4);\r\n    }\r\n\r\n    fire() {\r\n        let bullet;\r\n\r\n        if (this.ship) {\r\n            // target ship\r\n            const v = Vector.fromXY(this.ship.origin, this.origin, SMALL_ALIEN_BULLET_SPEED);\r\n            bullet = new Bullet(this.origin, v, 2);\r\n        } else {\r\n            // random fire\r\n            const v = Vector.fromAngle(random(1, 360), SMALL_ALIEN_BULLET_SPEED);\r\n            bullet = new Bullet(this.origin, v, 2);\r\n        }\r\n\r\n        this.trigger('fire', bullet);\r\n    }\r\n\r\n    destroy() {\r\n        this.ship = null;\r\n        this.trigger('expired');\r\n    }\r\n\r\n}\r\n            \r\n            \r\n            \r\n","import { EventSource } from './events';\r\nimport { Key } from './keys';\r\nimport screen from './screen';\r\nimport { Object2D } from './object2d';\r\nimport { Vector } from './vector';\r\nimport { random } from './util';\r\nimport { SIN, COS } from './lut';\r\n\r\nconst VELOCITY = 300 * screen.objectScale;\r\n\r\n// general, garden variety explosion\r\nexport class Explosion extends EventSource {\r\n\r\n    life: number = 1;   \r\n    points: {x: number, y: number, vx: number, vy: number, alpha: number }[] = [];\r\n    \r\n    constructor(private x: number, private y: number, private size: number = 100) {\r\n        super();\r\n\r\n        for(let i = 0; i < 15; i++) {\r\n            const v = Vector.fromAngle(random(1,360), Math.random() * VELOCITY);\r\n            this.points.push({x: x, y: y, vx: v.x, vy: v.y, alpha: Math.random() });\r\n        }\r\n    }\r\n\r\n    update(dt: number) {\r\n        this.points.forEach(point => {\r\n            point.x += point.vx * dt;\r\n            point.y += point.vy * dt;\r\n            point.alpha -= .002;\r\n        });\r\n\r\n        this.life -= dt;\r\n\r\n        if (this.life <= .1) {\r\n           this.trigger('expired'); \r\n        }\r\n    }\r\n\r\n    render(dt?: number) {\r\n        this.points.forEach(p => {\r\n            if (random(1,10) % 2 === 0) {\r\n                screen.draw.rect(p.x, p.y, 2, 2, `rgba(255,255,255,${p.alpha})`);\r\n            }\r\n        });\r\n    }\r\n}","import screen from './screen';\r\nimport { Vector } from './vector';\r\nimport { Object2D } from './object2d';\r\n\r\nexport class Bullet extends Object2D { \r\n\r\n    frame: number = 0;\r\n\r\n    constructor(origin: Vector, v: Vector, private life:number = 1.25) {\r\n        super(origin.x, origin.y);\r\n        this.velocity = v;\r\n    }\r\n\r\n    render() {\r\n        this.draw();   \r\n    }\r\n\r\n    update(dt: number) {\r\n        this.frame++;\r\n        this.move(dt);\r\n        this.life -= dt;\r\n\r\n        if (this.life <= 0) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        let size = this.frame <= 1 ? 8 * screen.objectScale : 4 * screen.objectScale;\r\n        screen.draw.rect(this.origin.x - 2, this.origin.y - 2, size, size, `rgba(255,0,255,.5)`);\r\n        screen.draw.rect(this.origin.x - 1, this.origin.y - 1, size, size, `rgba(0,255,255,.5)`);\r\n        screen.draw.rect(this.origin.x, this.origin.y, size, size);\r\n    }\r\n\r\n    destroy() {\r\n        this.trigger('expired');\r\n    }\r\n\r\n    get vertices(): Point[] {\r\n        return [this.origin];\r\n    }\r\n}","// yeah, yeah\r\n\r\nclass Global {\r\n    debug: boolean = false;\r\n    paused: boolean = false;\r\n    god: boolean = false;\r\n    burn: boolean = true;   // monitor burn effect\r\n}\r\n\r\nexport default new Global();","const VECTOR = {};\r\nconst PI2 = 2 * Math.PI;\r\n\r\nfor(let i = 0; i <= 360; i++) {\r\n    const t = PI2 * (i / 360);\r\n    \r\n    VECTOR[i] = {\r\n        x: Math.cos(t),\r\n        y: Math.sin(t)\r\n    }\r\n}\r\n\r\nexport class Vector {\r\n\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    static fromAngle(angleInDegrees: number, velocity: number = 1): Vector {\r\n        const x = VECTOR[angleInDegrees].x * velocity;\r\n        const y = VECTOR[angleInDegrees].y * velocity;\r\n        return new Vector(x, y);\r\n    }\r\n\r\n    static fromXY(p1: Point, p2: Point, velocity: number = 1): Vector {\r\n        let x = p1.x - p2.x;\r\n        let y = p1.y - p2.y;\r\n        const hyp = Math.sqrt(x * x + y * y);\r\n        x /= hyp;\r\n        y /= hyp;\r\n        return new Vector(x * velocity, y * velocity);\r\n    }\r\n\r\n    add(v: Vector) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n    }\r\n\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    dot(v: Vector) {\r\n        return (this.x * v.x) + (this.y * v.y);\r\n    }\r\n\r\n    friction(amount: number) {\r\n        this.x -= this.x * amount;\r\n        this.y -= this.y * amount;\r\n    }\r\n\r\n    scale(xscale: number, yscale: number) {\r\n        this.x *= xscale;\r\n        this.y *= yscale;\r\n    }\r\n\r\n    get magnitude() {\r\n        return Math.sqrt((this.x * this.x) + (this.y * this.y));\r\n    }\r\n    \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import './style.css';\r\n\r\nimport { loop } from './loop';\r\nimport { Key, Keys } from './keys';\r\nimport { World } from './world';\r\nimport { Sound } from './sounds';\r\nimport { Highscores } from './highscores';\r\nimport { AttractMode } from './attractMode';\r\nimport { InitialsMode } from './initialsMode';\r\nimport { GameMode } from './gameMode';\r\nimport Global from './global';\r\n\r\nexport class Asteroids {\r\n\r\n    private lastScore = 0;\r\n    private attractMode: AttractMode;\r\n    private gameMode: GameMode;\r\n    private initialsMode: InitialsMode;\r\n    private currentMode: IGameState;\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.attractMode = new AttractMode(new World(Highscores.top.score), this.lastScore);\r\n        this.currentMode = this.attractMode;\r\n        \r\n        const setGameMode = () => {\r\n            this.gameMode = new GameMode(new World(Highscores.top.score));\r\n            this.currentMode = this.gameMode;\r\n                    \r\n            this.gameMode.on('done', (source, world) => {\r\n                this.lastScore = world.score;\r\n\r\n                if (Highscores.qualifies(world.score)) {\r\n                    \r\n                    this.initialsMode = new InitialsMode(world.score);\r\n                    this.currentMode = this.initialsMode;\r\n\r\n                    this.initialsMode.on('done', () => {\r\n                        this.init();\r\n                    });\r\n\r\n                } else {\r\n                    // restart in attract mode\r\n                    this.init();\r\n                }\r\n            });\r\n        };\r\n\r\n        this.attractMode.on('done', () => {\r\n            setGameMode();\r\n        });\r\n\r\n    }\r\n\r\n    update(dt) {\r\n\r\n        if (Key.wasPressed(Keys.GOD)) {\r\n            Global.god = !Global.god;\r\n        }\r\n\r\n        if (Key.wasPressed(Keys.DEBUG)) {\r\n            Global.debug = !Global.debug; \r\n        }\r\n\r\n        if (Key.wasPressed(Keys.MONITOR_BURN)) {\r\n            Global.burn = !Global.burn; \r\n        }\r\n\r\n        if (Key.wasPressed(Keys.PAUSE)) {\r\n            Global.paused = !Global.paused; \r\n\r\n            if (Global.paused) {\r\n                Sound.off();\r\n            } else {\r\n                Sound.on();\r\n            }\r\n        }\r\n\r\n        if (Global.paused) {\r\n            return;\r\n        }\r\n\r\n        this.currentMode.update(dt);\r\n    }\r\n\r\n    render(dt) {\r\n        this.currentMode.render(dt);\r\n        Key.update();\r\n    }\r\n\r\n}\r\n\r\nconst game = new Asteroids();\r\n\r\nsetTimeout(() => {\r\n    loop(game);\r\n}, 1000);\r\n"],"names":["x","y","velocity","size","multiplier","life","frame","radius","rocks","update","dt","this","origin","length","trigger","render","random","ctx","beginPath","arc","Math","PI","fillStyle","fill","stroke","closePath","draw","scanlines","circle","Object2D","Shockwave","opacity","VectorLine","TextColor","CR","String","fromCharCode","magenta","cyan","BACKGROUND_COLOR","magenta5","cyan5","line","x1","y1","x2","y2","color","width","lineWidth","moveTo","strokeStyle","lineTo","vectorline","old","burn","shape","points","closed","l","save","restore","vectorShape","rect","height","fillRect","point","p","pointSize","background","step","i","bounds","text","font","textBaseline","strokeText","text2","cb","measureText","text3","fillText","scorePlayer1","score","toString","medium","highscore","small","width2","oneCoinOnePlay","pushStart","xlarge","player1","gameOver","copyright","drawExtraLives","lives","min","Ship","loc","setLineDash","quadtree","tree","drawTree","child","node","nodes","forEach","xmid","ymid","height2","Draw","world","showPushStart","pushStartTimer","init","started","startLevel","checkCollisions","updateAlienTimer","scenery","alien","updatePushStartTimer","alienBullets","collisions","Collisions","check","rock","shake","alienDestroyed","rockDestroyed","bullet","delta","drawBackground","drawPushStart","DemoMode","BULLET_SPEED","objectScale","MAX_ACCELERATION","VELOCITY","moving","bulletCount","bulletTimer","shield","trails","flame","Flame","angle","trail","alpha","move","Key","isThrust","thrust","wasRotateLeft","rotate","isRotateLeft","wasRotateRight","isRotateRight","isFire","fire","wasHyperspace","hyperspace","abs","push","friction","n","v","Vector","fromAngle","magnitude","add","play","Bullet","on","bv","copy","scale","speed","dot","max","kba","kbv","destroy","frames","EventSource","Flash","fontSize","heightText","heightScore","Achievement","console","log","VOLUME","soundOn","createSound","options","count","sound","Howl","bind","_origVolume","volume","all","src","alienFire","largeExplosion","mediumExplosion","smallExplosion","largeAlien","loop","smallAlien","thumpLo","thumpHi","extraLife","powerup","getPowerup","Sound","off","stop","level","offset","zone","Rock","RockSize","Large","rotTimer","rock1","rock2","rock3","type","def","map","rot","timeToRot","degrees","atan2","floor","split","Medium","Small","rate","randomFloat","angle1","direction","angle2","v1","v2","speed1","speed2","maxObjects","maxLevels","objects","insert","indices","getIndex","splice","retrieve","result","concat","filter","a","indexOf","clear","results","top","bottom","zero","round","create","Quadtree","explosionCount","maxExplosionCount","maxExplosionThreshold","explosionScores","extraLifeScore","shipBullets","shockwaves","shipTimer","alienTimer","levelTimer","gameOverTimer","shakeTimer","powerupTimer","dramticPauseTimer","slowMoTimer","ship","adjust","obj","preShake","postShake","addRocks","createRocks","addShip","createExplosion","explosion","Explosion","pop","setSlowMo","achievement","addScenery","addScore","shockwave","time","factor","SlowMoTimer","shipDestroyed","addFlash","flash","boom","debris","addAlien","lvl","little","alienSound","SmallAlien","BigAlien","b","ScoreMarker","addPowerup","tryPlaceShip","shipRect","collided","shouldTryToPlaceShip","shouldCheckForNextLevel","shouldCheckCollisions","World","RAD","COS","SIN","r","cos","sin","bulletCheck","bullets","targets","dcb","candidates","target","bullet1","candidate","bullet2","bbox","lineclip","sources","deep","source","pointsInPolygon","vert1","vertices","vert2","pointInPoly","t","polyCorners","j","polyX","polyY","oddNodes","intersect","edge","bitCode","code","codeB","lastCode","len","codeA","part","prev","prevInside","inside","canvas","document","getElementById","getContext","window","addEventListener","body","clientWidth","clientHeight","_fontXL","_fontL","_fontM","_fontS","_objectScale","_pointSize","offRect","_shipRect","self","large","dx","dy","translate","Screen","HowlerGlobal","prototype","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","testPlay","Promise","then","catch","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","o","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","_pool","pool","_preload","preload","_rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","timeout","setParams","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","from","to","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","index","remCache","cache","events","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","g","_super","_pos","_orientation","stereo","pan","pos","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","blink","Highscores","drawHighScores","screenX","startY","spacing","pad","scores","initials","char","HighScoreMode","timestamp","performance","getTime","last","DT","requestAnimationFrame","lo","thumpBeatTimer","thumpBeat","thumpTimer","thumpTime","Thumper","thumper","lastCollisions","renderStatic","debug","renderDebug","god","date","setSeconds","toISOString","substr","cowboys","indians","cowboy","indian","GameMode","lastScore","demoTimer","modes","currentMode","isAnyPressed","updateAttractTimer","AttractMode","defaults","SCORE_KEY","highscores","localStorage","getItem","JSON","parse","qualifies","sort","setItem","stringify","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","setTimeoutContext","context","bindFn","invokeArrayArg","arg","each","iterator","hasOwnProperty","deprecate","name","message","deprecationMessage","Error","stack","TypeError","output","nextKey","extend","dest","merge","inherit","base","properties","childP","baseP","constructor","boolOrFn","val","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","hasParent","parentNode","inStr","find","trim","inArray","findByKey","toArray","uniqueArray","values","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","inputTarget","domHandler","ev","enable","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","getAngle","distance","getDistance","offsetDelta","prevDelta","prevInput","deltaX","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","rotation","getRotation","maxPointers","velocityX","velocityY","lastInterval","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","props","sqrt","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","normalizeSingleTouches","touches","changed","changedTouches","TOUCH_INPUT_MAP","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","set","compute","actions","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","DIRECTION_UP","preventSrc","STATE_FAILED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","preset","Manager","handlers","oldCssProps","inputClass","toggleCssProps","item","recognizeWith","requireFailure","cssProps","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","attrTest","optionPointers","isRecognized","isValid","threshold","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","force","stopped","curRecognizer","existing","remove","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","Keys","HYPERSPACE","ROTATE_LEFT","ROTATE_LEFT_A","ROTATE_RIGHT","ROTATE_RIGHT_D","THRUST","THRUST_W","FIRE","DEBUG","PAUSE","GOD","MONITOR_BURN","touched","rotateLeft","active","rotateRight","onkeydown","keyCode","onkeyup","stage","mc","tap","pinch","isPressed","wasPressed","isDown","isHyperspace","_Key","_xmin","_xmax","_ymin","_ymax","_width","_height","_score","_points","calcBounds","c","s","newX","newY","rect2","letters","position","InitialsMode","white","BIG_ALIEN_BULLET_SPEED","SMALL_ALIEN_BULLET_SPEED","BIG_ALIEN_SPEED","SMALL_ALIEN_SPEED","moveTimer","moveTime","bulletTime","Alien","fromXY","vx","vy","VECTOR","PI2","angleInDegrees","hyp","amount","xscale","yscale","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","globalThis","Function","Symbol","toStringTag","defineProperty","scriptUrl","importScripts","currentScript","tagName","scripts","getElementsByTagName","game","attractMode","gameMode","initialsMode"],"sourceRoot":""}